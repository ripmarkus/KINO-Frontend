import type { ReactiveController } from 'lit';
import type { GridHost } from '../internal/types.js';
import FilterDataOperation from '../operations/filter.js';
import SortDataOperation from '../operations/sort.js';
import type { StateController } from './state.js';
export declare class DataOperationsController<T extends object> implements ReactiveController {
    protected host: GridHost<T>;
    protected sorting: SortDataOperation<T>;
    protected filtering: FilterDataOperation<T>;
    constructor(host: GridHost<T>);
    hostConnected(): void;
    protected get hasCustomSort(): boolean;
    protected get hasCustomFilter(): boolean;
    protected get customFilter(): import("../index.js").DataPipelineHook<T>;
    protected get customSort(): import("../index.js").DataPipelineHook<T>;
    apply(data: T[], state: StateController<T>): Promise<T[]>;
}
