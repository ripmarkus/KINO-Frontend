import { html } from 'lit';
import { styleMap } from 'lit/directives/style-map.js';
import { registerGridIcons } from '../internal/icon-registry.js';
import { applyColumnWidths } from '../internal/utils.js';
export class GridDOMController {
    constructor(host, state) {
        this.host = host;
        this.state = state;
        this.#initialSize = () => {
            setTimeout(() => this.setScrollOffset());
        };
        this.columnSizes = {};
        this.rowRenderer = (data, index) => {
            return html `
      <apex-grid-row
        part="row"
        style=${styleMap({ ...this.columnSizes, ...this.getActiveRowStyles(index) })}
        .index=${index}
        .activeNode=${this.state.active}
        .data=${data}
        .columns=${this.host.columns}
      >
      </apex-grid-row>
    `;
        };
        this.host.addController(this);
    }
    #initialSize;
    get container() {
        return this.host.scrollContainer;
    }
    async hostConnected() {
        registerGridIcons();
        this.setGridColumnSizes();
        await this.host.updateComplete;
        this.container.addEventListener('visibilityChanged', this.#initialSize, { once: true });
    }
    hostUpdate() {
        this.setScrollOffset();
        this.setGridColumnSizes();
    }
    setScrollOffset() {
        const size = this.container ? this.container.offsetWidth - this.container.clientWidth : 0;
        this.host.style.setProperty('--scrollbar-offset', `${size}px`);
    }
    setGridColumnSizes() {
        this.columnSizes = applyColumnWidths(this.host.columns);
    }
    getActiveRowStyles(index) {
        const { row } = this.state.active;
        return row === index ? { 'z-index': '3' } : {};
    }
}
//# sourceMappingURL=dom.js.map