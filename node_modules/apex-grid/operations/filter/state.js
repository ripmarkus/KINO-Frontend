import { FilterExpressionTree } from './tree.js';
export class FilterState {
    constructor() {
        this.state = new Map();
    }
    get empty() {
        return this.state.size < 1;
    }
    get keys() {
        return Array.from(this.state.keys());
    }
    get values() {
        return Array.from(this.state.values());
    }
    get ands() {
        return this.values.flatMap((each) => each.ands);
    }
    get ors() {
        return this.values.flatMap((each) => each.ors);
    }
    has(key) {
        return this.state.has(key);
    }
    get(key) {
        return this.state.get(key);
    }
    delete(key) {
        return this.state.delete(key);
    }
    clear() {
        this.state.clear();
    }
    set(expression) {
        if (this.has(expression.key)) {
            this.get(expression.key)?.add(expression);
            return;
        }
        this.state.set(expression.key, new FilterExpressionTree(expression.key).add(expression));
    }
}
//# sourceMappingURL=state.js.map