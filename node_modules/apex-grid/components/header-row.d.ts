import { LitElement, type PropertyValueMap } from 'lit';
import { type StateController } from '../controllers/state.js';
import type { ColumnConfiguration } from '../internal/types.js';
import ApexGridHeader from './header.js';
export default class ApexGridHeaderRow<T extends object> extends LitElement {
    #private;
    static get tagName(): "apex-grid-header-row";
    static styles: import("lit").CSSResult;
    static register(): void;
    protected _headers: NodeListOf<ApexGridHeader<T>>;
    state: StateController<T>;
    columns: Array<ColumnConfiguration<T>>;
    get headers(): ApexGridHeader<T>[];
    constructor();
    connectedCallback(): void;
    protected shouldUpdate(props: PropertyValueMap<this> | Map<PropertyKey, this>): boolean;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        [ApexGridHeaderRow.tagName]: ApexGridHeaderRow<object>;
    }
}
