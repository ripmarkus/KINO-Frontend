{
      "$schema": "https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/main/docs/customData.schema.json",
      "version": 1.1,
      "tags": [{"name":"igc-avatar","description":"An avatar component is used as a representation of a user identity\ntypically in a user profile.\n---\n\n\n### **Slots:**\n - _default_ - Renders an icon inside the default slot.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the avatar.\n- **initials** - The initials wrapper of the avatar.\n- **image** - The image wrapper of the avatar.\n- **icon** - The icon wrapper of the avatar.","attributes":[{"name":"src","description":"The image source to use.","values":[]},{"name":"alt","description":"Alternative text for the image.","values":[]},{"name":"initials","description":"Initials to use as a fallback when no image is available.","values":[]},{"name":"shape","description":"The shape of the avatar.","values":[{"name":"AvatarShape"}]}],"references":[]},{"name":"igc-icon","description":"The icon component allows visualizing collections of pre-registered SVG icons.\n---\n","attributes":[{"name":"name","description":"The name of the icon glyph to draw.","values":[]},{"name":"collection","description":"The name of the registered collection for look up of icons.\nDefaults to `default`.","values":[]},{"name":"mirrored","description":"Whether to flip the icon. Useful for RTL layouts.","values":[]}],"references":[]},{"name":"igc-expansion-panel","description":"The Expansion Panel Component provides a way to display information in a toggleable way -\ncompact summary view containing title and description and expanded detail view containing\nadditional content to the summary header.\n---\n\n\n### **Events:**\n - **igcOpening** - Emitted before opening the expansion panel.\n- **igcOpened** - Emitted after the expansion panel is opened.\n- **igcClosing** - Emitted before closing the expansion panel.\n- **igcClosed** - Emitted after the expansion panel is closed.\n\n### **Slots:**\n - _default_ - renders the default content of the panel\n- **title** - renders the title of the panel's header\n- **subtitle** - renders the subtitle of the panel's header\n- **indicator** - renders the expand/collapsed indicator\n- **indicator-expanded** - renders the expanded state of the indicator\n\n### **CSS Parts:**\n - **header** - The container of the expansion indicator, title and subtitle.\n- **title** -  The title container.\n- **subtitle** - The subtitle container.\n- **indicator** - The indicator container.\n- **content** - The expansion panel's content wrapper.","attributes":[{"name":"open","description":"Indicates whether the contents of the control should be visible.","values":[]},{"name":"disabled","description":"Get/Set whether the expansion panel is disabled. Disabled panels are ignored for user interactions.","values":[]},{"name":"indicator-position","description":"The indicator position of the expansion panel.","values":[{"name":"ExpansionPanelIndicatorPosition"}]}],"references":[]},{"name":"igc-accordion","description":"The Accordion is a container-based component that can house multiple expansion panels\nand offers keyboard navigation.\n---\n\n\n### **Slots:**\n - _default_ - Renders the expansion panels inside default slot.","attributes":[{"name":"single-expand","description":"Allows only one panel to be expanded at a time.","values":[]}],"references":[]},{"name":"igc-badge","description":"The badge is a component indicating a status on a related item or an area\nwhere some active indication is required.\n---\n\n\n### **Slots:**\n - _default_ - Default slot for the badge.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the badge.","attributes":[{"name":"variant","description":"The type of badge.","values":[{"name":"StyleVariant"}]},{"name":"outlined","description":"Sets whether to draw an outlined version of the badge.","values":[]},{"name":"shape","description":"The shape of the badge.","values":[{"name":"BadgeShape"}]}],"references":[]},{"name":"igc-button","description":"Represents a clickable button, used to submit forms or anywhere in a\ndocument for accessible, standard button functionality.\n---\n\n\n### **Events:**\n \n\n### **Slots:**\n - _default_ - Renders the label of the button.\n- **prefix** - Renders content before the label of the button.\n- **suffix** - Renders content after the label of the button.\n\n### **CSS Parts:**\n - **base** - The native button element of the igc-button component.\n- **prefix** - The prefix container of the igc-button component.\n- **suffix** - The suffix container of the igc-button component.","attributes":[{"name":"variant","description":"Sets the variant of the button.","values":[{"name":"ButtonVariant"}]},{"name":"type","description":"The type of the button. Defaults to `button`.","values":[{"name":"button"},{"name":"reset"},{"name":"submit"}]},{"name":"href","description":"The URL the button points to.","values":[]},{"name":"download","description":"Prompts to save the linked URL instead of navigating to it.","values":[]},{"name":"target","description":"Where to display the linked URL, as the name for a browsing context.","values":[{"name":"_blank"},{"name":"_parent"},{"name":"_self"},{"name":"_top"}]},{"name":"rel","description":"The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types","values":[]},{"name":"disabled","description":"The disabled state of the component","values":[]}],"references":[]},{"name":"igc-banner","description":"The `igc-banner` component displays important and concise message(s) for a user to address, that is specific to a page or feature.\n---\n\n\n### **Events:**\n - **igcClosing** - Emitted before closing the banner - when a user interacts (click) with the default action of the banner.\n- **igcClosed** - Emitted after the banner is closed - when a user interacts (click) with the default action of the banner.\n\n### **Slots:**\n - _default_ - Renders the text content of the banner message.\n- **prefix** - Renders additional content at the start of the message block.\n- **actions** - Renders any action elements.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the banner component.\n- **spacer** - The inner wrapper that sets the space around the banner.\n- **message** - The part that holds the text and the illustration.\n- **illustration** - The part that holds the banner icon/illustration.\n- **content** - The part that holds the banner text content.\n- **actions** - The part that holds the banner action buttons.","attributes":[{"name":"open","description":"Determines whether the banner is being shown/hidden.","values":[]}],"references":[]},{"name":"igc-toggle-button","description":"The `igc-toggle-button` wraps a native button element and exposes additional `value` and `selected` properties.\nIt is used in the context of an `igc-button-group` to facilitate the creation of group/toolbar like UX behaviors.\n---\n\n\n### **Slots:**\n - **Renders** - the label/content of the button.\n\n### **CSS Parts:**\n - **toggle** - The native button element.","attributes":[{"name":"value","description":"The value attribute of the control.","values":[]},{"name":"selected","description":"Determines whether the button is selected.","values":[]},{"name":"disabled","description":"Determines whether the button is disabled.","values":[]}],"references":[]},{"name":"igc-button-group","description":"The `igc-button-group` groups a series of `igc-toggle-button`s together, exposing features such as layout and selection.\n---\n\n\n### **Events:**\n - **igcSelect** - Emitted when a button is selected through user interaction.\n- **igcDeselect** - Emitted when a button is deselected through user interaction.\n\n### **Slots:**\n - _default_ - Renders `igc-toggle-button` component.\n\n### **CSS Parts:**\n - **group** - The button group container.","attributes":[{"name":"disabled","description":"Disables all buttons inside the group.","values":[]},{"name":"alignment","description":"Sets the orientation of the buttons in the group.","values":[{"name":"ContentOrientation"}]},{"name":"selection","description":"Controls the mode of selection for the button group.","values":[{"name":"ButtonGroupSelection"}]},{"name":"selectedItems","description":"Gets/Sets the currently selected buttons (their values).","values":[{"name":"string[]"}]}],"references":[]},{"name":"igc-validator","description":"\n---\n\n\n### **CSS Parts:**\n - **helper-text** - The base wrapper\n- **validation-message** - The validation error message container\n- **validation-icon** - The validation error icon","attributes":[{"name":"invalid","values":[]}],"references":[]},{"name":"igc-date-time-input","description":"A date time input is an input field that lets you set and edit the date and time in a chosen input element\nusing customizable display and input formats.\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when the control input receives user input.\n- **igcChange** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - **prefix** - Renders content before the input.\n- **suffix** - Renders content after input.\n- **helper-text** - Renders content below the input.\n- **value-missing** - Renders content when the required validation fails.\n- **range-overflow** - Renders content when the max validation fails.\n- **range-underflow** - Renders content when the min validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **container** - The main wrapper that holds all main input elements.\n- **input** - The native input element.\n- **label** - The native label element.\n- **prefix** - The prefix wrapper.\n- **suffix** - The suffix wrapper.\n- **helper-text** - The helper text wrapper.","attributes":[{"name":"input-format","description":"The date format to apply on the input.","values":[]},{"name":"value","description":"The value of the input.","values":[{"name":"Date"}]},{"name":"min","description":"The minimum value required for the input to remain valid.","values":[{"name":"Date"}]},{"name":"max","description":"The maximum value required for the input to remain valid.","values":[{"name":"Date"}]},{"name":"display-format","description":"Format to display the value in when not editing.\nDefaults to the input format if not set.","values":[]},{"name":"spin-loop","description":"Sets whether to loop over the currently spun segment.","values":[]},{"name":"locale","description":"The locale settings used to display the value.","values":[]},{"name":"prompt","description":"The prompt symbol to use for unfilled parts of the mask.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"label","description":"The label for the control.","values":[]}],"references":[]},{"name":"igc-dialog","description":"Represents a Dialog component.\n---\n\n\n### **Events:**\n - **igcClosing** - Emitter just before the dialog is closed.\n- **igcClosed** - Emitted after closing the dialog.\n\n### **Slots:**\n - _default_ - Renders content inside the default slot.\n- **title** - Renders the title of the dialog header.\n- **message** - Renders the message content of the dialog.\n- **footer** - Renders the dialog footer.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the dialog.\n- **title** - The title container.\n- **footer** - The footer container.\n- **overlay** - The overlay.","attributes":[{"name":"keep-open-on-escape","description":"Whether the dialog should be kept open when pressing the 'ESCAPE' button.","values":[]},{"name":"close-on-outside-click","description":"Whether the dialog should be closed when clicking outside of it.","values":[]},{"name":"hide-default-action","description":"Whether to hide the default action button for the dialog.\n\nWhen there is projected content in the `footer` slot this property\nhas no effect.","values":[]},{"name":"open","description":"Whether the dialog is opened.","values":[]},{"name":"title","description":"Sets the title of the dialog.","values":[]}],"references":[]},{"name":"igc-focus-trap","description":"\n---\n\n\n### **Slots:**\n - _default_ - The content of the focus trap component","attributes":[{"name":"disabled","description":"Whether to manage focus state for the slotted children.","values":[]}],"references":[]},{"name":"igc-input","description":"\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when the control input receives user input.\n- **igcChange** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - **prefix** - Renders content before the input.\n- **suffix** - Renders content after input.\n- **helper-text** - Renders content below the input.\n- **value-missing** - Renders content when the required validation fails.\n- **type-mismatch** - Renders content when the a type url/email input pattern validation fails.\n- **pattern-mismatch** - Renders content when the pattern validation fails.\n- **too-long** - Renders content when the maxlength validation fails.\n- **too-short** - Renders content when the minlength validation fails.\n- **range-overflow** - Renders content when the max validation fails.\n- **range-underflow** - Renders content when the min validation fails.\n- **step-mismatch** - Renders content when the step validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **container** - The main wrapper that holds all main input elements.\n- **input** - The native input element.\n- **label** - The native label element.\n- **prefix** - The prefix wrapper.\n- **suffix** - The suffix wrapper.\n- **helper-text** - The helper text wrapper.","attributes":[{"name":"value","description":"The value of the control.","values":[]},{"name":"type","description":"The type attribute of the control.","values":[{"name":"InputType"}]},{"name":"inputmode","description":"The input mode attribute of the control.\nSee [relevant MDN article](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)","values":[]},{"name":"pattern","description":"The pattern attribute of the control.","values":[]},{"name":"minlength","description":"The minimum string length required by the control.","values":[]},{"name":"maxlength","description":"The maximum string length of the control.","values":[]},{"name":"min","description":"The min attribute of the control.","values":[]},{"name":"max","description":"The max attribute of the control.","values":[]},{"name":"step","description":"The step attribute of the control.","values":[]},{"name":"autofocus","description":"The autofocus attribute of the control.","values":[]},{"name":"autocomplete","description":"The autocomplete attribute of the control.","values":[]},{"name":"validate-only","description":"Enables validation rules to be evaluated without restricting user input. This applies to the `maxLength` property for\nstring-type inputs or allows spin buttons to exceed the predefined `min/max` limits for number-type inputs.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"label","description":"The label for the control.","values":[]}],"references":[]},{"name":"igc-popover","description":"\n---\n\n\n### **Slots:**\n - _default_ - Content of the popover.\n- **anchor** - The element the popover will be anchored to.\n\n### **CSS Parts:**\n - **container** - The container wrapping the slotted content in the popover.","attributes":[{"name":"anchor","description":"Pass an IDREF or an DOM element reference to use as the\nanchor target for the floating element.","values":[{"name":"Element"}]},{"name":"arrow-offset","description":"Additional offset to apply to the arrow element if enabled.","values":[]},{"name":"inline","description":"Improves positioning for inline reference elements that span over multiple lines.\nUseful for tooltips or similar components.","values":[]},{"name":"flip","description":"When enabled this changes the placement of the floating element in order to keep it\nin view along the main axis.","values":[]},{"name":"offset","description":"Placement modifier which translates the floating element along the main axis.","values":[]},{"name":"open","description":"The visibility state of the popover component.","values":[]},{"name":"placement","description":"Where to place the floating element relative to the parent anchor element.","values":[{"name":"PopoverPlacement"}]},{"name":"same-width","description":"When enabled the floating element will match the width of its parent anchor element.","values":[]},{"name":"shift","description":"When enabled this tries to shift the floating element along the main axis\nkeeping it in view, preventing overflow while maintaining the desired placement.","values":[]},{"name":"shift-padding","description":"Virtual padding for the resolved overflow detection offsets in pixels.","values":[]}],"references":[]},{"name":"igc-chip","description":"Chips help people enter information, make selections, filter content, or trigger actions.\n---\n\n\n### **Events:**\n - **igcRemove** - Emits an event when the chip component is removed. Returns the removed chip component.\n- **igcSelect** - Emits event when the chip component is selected/deselected and any related animations and transitions also end.\n\n### **Slots:**\n - _default_ - Renders the chip data.\n- **prefix** - Renders content before the data of the chip.\n- **suffix** - Renders content after the data of the chip.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the chip.\n- **prefix** - The prefix container of the chip.\n- **suffix** - The suffix container of the chip.","attributes":[{"name":"disabled","description":"Sets the disabled state for the chip.","values":[]},{"name":"removable","description":"Defines if the chip is removable or not.","values":[]},{"name":"selectable","description":"Defines if the chip is selectable or not.","values":[]},{"name":"selected","description":"Defines if the chip is selected or not.","values":[]},{"name":"variant","description":"A property that sets the color variant of the chip component.","values":[{"name":"StyleVariant"}]}],"references":[]},{"name":"igc-predefined-ranges-area","description":"The predefined ranges area component is used within the `igc-date-range picker` element and it\ndisplays a set of chips with predefined date ranges. The component allows users to quickly select\na predefined date range value. Users can also provide custom ranges to be displayed as chips.\n---\n\n\n### **Events:**\n - **igcRangeSelect**","attributes":[{"name":"use-predefined-ranges","description":"Whether the control will show chips with predefined ranges.","values":[]}],"references":[]},{"name":"igc-date-range-picker","description":"The igc-date-range-picker allows the user to select a range of dates.\n---\n\n\n### **Events:**\n - **igcOpening** - Emitted just before the calendar dropdown is shown.\n- **igcOpened** - Emitted after the calendar dropdown is shown.\n- **igcClosing** - Emitted just before the calendar dropdown is hidden.\n- **igcClosed** - Emitted after the calendar dropdown is hidden.\n- **igcChange** - Emitted when the user modifies and commits the elements's value.\n- **igcInput** - Emitted when when the user types in the element.\n\n### **Slots:**\n - **prefix** - Renders content before the input (single input).\n- **prefix-start** - Renders content before the start input (two inputs).\n- **prefix-end** - Renders content before the end input (two inputs).\n- **suffix** - Renders content after the input (single input).\n- **suffix-start** - Renders content after the start input (single input).\n- **suffix-end** - Renders content after the end input (single input).\n- **helper-text** - Renders content below the input.\n- **bad-input** - Renders content when the value is in the disabledDates ranges.\n- **value-missing** - Renders content when the required validation fails.\n- **range-overflow** - Renders content when the max validation fails.\n- **range-underflow** - Renders content when the min validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n- **title** - Renders content in the calendar title.\n- **header-date** - Renders content instead of the current date/range in the calendar header.\n- **clear-icon** - Renders a clear icon template.\n- **clear-icon-start** - Renders a clear icon template for the start input (two inputs).\n- **clear-icon-end** - Renders a clear icon template for the end input (two inputs).\n- **calendar-icon** - Renders the icon/content for the calendar picker.\n- **calendar-icon-start** - Renders the icon/content for the calendar picker for the start input (two inputs).\n- **calendar-icon-end** - Renders the icon/content for the calendar picker for the end input (two inputs).\n- **calendar-icon-open** - Renders the icon/content for the picker in open state.\n- **calendar-icon-open-start** - Renders the icon/content for the picker in open state for the start input (two inputs).\n- **calendar-icon-open-end** - Renders the icon/content for the picker in open state for the end input (two inputs).\n- **actions** - Renders content in the action part of the picker in open state.\n- **separator** - Renders the separator element between the two inputs.\n\n### **CSS Parts:**\n - **separator** - The separator element between the two inputs.\n- **ranges** - The wrapper that renders the custom and predefined ranges.\n- **label** - The label wrapper that renders content above the target input.\n- **calendar-icon** - The calendar icon wrapper for closed state (single input).\n- **calendar-icon-start** - The calendar icon wrapper for closed state for the start input (two inputs).\n- **calendar-icon-end** - The calendar icon wrapper for closed state for the end input (two inputs).\n- **calendar-icon-open** - The calendar icon wrapper for opened state (single input).\n- **calendar-icon-open-start** - The calendar icon wrapper for opened state for the start input (two inputs).\n- **calendar-icon-open-end** - The calendar icon wrapper for opened state for the end input (two inputs).\n- **clear-icon** - The clear icon wrapper (single input).\n- **clear-icon-start** - The clear icon wrapper for the start input (two inputs).\n- **clear-icon-end** - The clear icon wrapper for the end input (two inputs).\n- **actions** - The wrapper for the custom actions area.\n- **clear-icon** - The clear icon wrapper.\n- **input** - The native input element.\n- **prefix** - The prefix wrapper.\n- **suffix** - The suffix wrapper.\n- **helper-text** - The helper-text wrapper that renders content below the target input.\n- **header** - The calendar header element.\n- **header-title** - The calendar header title element.\n- **header-date** - The calendar header date element.\n- **calendar-content** - The calendar content element which contains the views and navigation elements.\n- **navigation** - The calendar navigation container element.\n- **months-navigation** - The calendar months navigation button element.\n- **years-navigation** - The calendar years navigation button element.\n- **years-range** - The calendar years range element.\n- **navigation-buttons** - The calendar navigation buttons container.\n- **navigation-button** - The calendar previous/next navigation button.\n- **days-view-container** - The calendar days view container element.\n- **days-view** - The calendar days view element.\n- **months-view** - The calendar months view element.\n- **years-view** - The calendar years view element.\n- **days-row** - The calendar days row element.\n- **calendar-label** - The calendar week header label element.\n- **week-number** - The calendar week number element.\n- **week-number-inner** - The calendar week number inner element.\n- **date** - The calendar date element.\n- **date-inner** - The calendar date inner element.\n- **first** - The calendar first selected date element in range selection.\n- **last** - The calendar last selected date element in range selection.\n- **inactive** - The calendar inactive date element.\n- **hidden** - The calendar hidden date element.\n- **weekend** - The calendar weekend date element.\n- **range** - The calendar range selected element.\n- **special** - The calendar special date element.\n- **disabled** - The calendar disabled date element.\n- **single** - The calendar single selected date element.\n- **preview** - The calendar range selection preview date element.\n- **month** - The calendar month element.\n- **month-inner** - The calendar month inner element.\n- **year** - The calendar year element.\n- **year-inner** - The calendar year inner element.\n- **selected** - The calendar selected state for element(s). Applies to date, month and year elements.\n- **current** - The calendar current state for element(s). Applies to date, month and year elements.","attributes":[{"name":"mode","description":"Determines whether the calendar is opened in a dropdown or a modal dialog","values":[{"name":"PickerMode"}]},{"name":"use-two-inputs","description":"Use two inputs to display the date range values. Makes the input editable in dropdown mode.","values":[]},{"name":"usePredefinedRanges","description":"Whether the control will show chips with predefined ranges.","values":[]},{"name":"locale","description":"The locale settings used to display the value.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"non-editable","description":"Whether to allow typing in the input.","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"label","description":"The label of the control (single input).","values":[]},{"name":"label-start","description":"The label attribute of the start input.","values":[]},{"name":"label-end","description":"The label attribute of the end input.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control (single input).","values":[]},{"name":"placeholder-start","description":"The placeholder attribute of the start input.","values":[]},{"name":"placeholder-end","description":"The placeholder attribute of the end input.","values":[]},{"name":"prompt","description":"The prompt symbol to use for unfilled parts of the mask.","values":[]},{"name":"display-format","description":"Format to display the value in when not editing.\nDefaults to the input format if not set.","values":[]},{"name":"input-format","description":"The date format to apply on the inputs.\nDefaults to the current locale Intl.DateTimeFormat","values":[]},{"name":"min","description":"The minimum value required for the date range picker to remain valid.","values":[{"name":"Date"}]},{"name":"max","description":"The maximum value required for the date range picker to remain valid.","values":[{"name":"Date"}]},{"name":"visible-months","description":"The number of months displayed in the calendar.","values":[]},{"name":"header-orientation","description":"The orientation of the calendar header.","values":[{"name":"ContentOrientation"}]},{"name":"orientation","description":"The orientation of the multiple months displayed in the calendar's days view.","values":[{"name":"ContentOrientation"}]},{"name":"hide-header","description":"Determines whether the calendar hides its header.","values":[]},{"name":"show-week-numbers","description":"Whether to show the number of the week in the calendar.","values":[]},{"name":"hide-outside-days","description":"Controls the visibility of the dates that do not belong to the current month.","values":[]},{"name":"value","values":[{"name":"DateRangeValue"}]},{"name":"active-date","description":"Gets/Sets the date which is shown in the calendar picker and is highlighted.\nBy default it is the current date.","values":[{"name":"Date"}]},{"name":"week-start","description":"Sets the start day of the week for the calendar.","values":[{"name":"WeekDays"}]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"keep-open-on-select","description":"Whether the component dropdown should be kept open on selection.","values":[]},{"name":"keep-open-on-outside-click","description":"Whether the component dropdown should be kept open on clicking outside of it.","values":[]},{"name":"open","description":"Sets the open state of the component.","values":[]}],"references":[]},{"name":"igc-days-view","description":"Instantiate a days view as a separate component in the calendar.\n---\n\n\n### **Events:**\n - **igcActiveDateChange** - Emitted when the active date changes.\n- **igcRangePreviewDateChange** - Emitted when the range preview date changes.\n\n### **CSS Parts:**\n - **days-row** - The days row container.\n- **label** - The label container.\n- **label-inner** - The inner label container.\n- **week-number** - The week number container.\n- **week-number-inner** - The inner week number container.","attributes":[{"name":"hide-leading-days","description":"Whether to show leading days which do not belong to the current month.","values":[]},{"name":"hide-trailing-days","description":"Whether to show trailing days which do not belong to the current month.","values":[]},{"name":"week-day-format","description":"The format of the days. Defaults to narrow.","values":[{"name":"long"},{"name":"short"},{"name":"narrow"}]},{"name":"active","description":"The active state of the component.","values":[]},{"name":"value","description":"The current value of the calendar.\nUsed when selection is set to single","values":[{"name":"Date"}]},{"name":"values","description":"The current values of the calendar.\nUsed when selection is set to multiple of range.","values":[{"name":"Date[]"}]},{"name":"selection","description":"Sets the type of selection in the component.","values":[{"name":"CalendarSelection"}]},{"name":"show-week-numbers","description":"Whether to show the week numbers.","values":[]},{"name":"week-start","description":"Gets/Sets the first day of the week.","values":[{"name":"WeekDays"}]},{"name":"locale","description":"Gets/Sets the locale used for formatting and displaying the dates in the component.","values":[]},{"name":"active-date","description":"Get/Set the date which is shown in view and is highlighted. By default it is the current date.","values":[{"name":"Date"}]}],"references":[]},{"name":"igc-months-view","description":"Instantiate a months view as a separate component in the calendar.\n---\n\n\n### **Events:**\n \n\n### **CSS Parts:**\n - **months-row** - The months row container.\n- **month** - The month container.\n- **month-inner** - The inner month container.","attributes":[{"name":"locale","description":"Sets the locale used for formatting and displaying the dates.","values":[]},{"name":"month-format","description":"The format of the month. Defaults to long.","values":[{"name":"numeric"},{"name":"2-digit"},{"name":"long"},{"name":"short"},{"name":"narrow"}]}],"references":[]},{"name":"igc-years-view","description":"Instantiate a years view as a separate component in the calendar.\n---\n\n\n### **Events:**\n \n\n### **CSS Parts:**\n - **years-row** - The years row container.\n- **year** - The year container.\n- **year-inner** - The inner year container.","attributes":[{"name":"years-per-page","description":"Sets how many years are displayed on a single page.","values":[]}],"references":[]},{"name":"igc-calendar","description":"Represents a calendar that lets users\nto select a date value in a variety of different ways.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when calendar changes its value.\n\n### **Slots:**\n - _default_ - The default slot for the calendar.\n- **title** - Renders the title of the calendar header.\n- **header-date** - Renders content instead of the current date/range in the calendar header.\n\n### **CSS Parts:**\n - **header** - The header element of the calendar.\n- **header-title** - The header title element of the calendar.\n- **header-date** - The header date element of the calendar.\n- **content** - The content element which contains the views and navigation elements of the calendar.\n- **content-vertical** - The content element which contains the views and navigation elements of the calendar in vertical orientation.\n- **navigation** - The navigation container element of the calendar.\n- **months-navigation** - The months navigation button element of the calendar.\n- **years-navigation** - The years navigation button element of the calendar.\n- **years-range** - The years range element of the calendar.\n- **navigation-buttons** - The navigation buttons container of the calendar.\n- **navigation-button** - Previous/next navigation button of the calendar.\n- **days-view-container** - The days view container element of the calendar.\n- **days-view** - Days view element of the calendar.\n- **months-view** - The months view element of the calendar.\n- **years-view** - The years view element of the calendar.\n- **days-row** - Days row element of the calendar.\n- **label** - Week header label element of the calendar.\n- **week-number** - Week number element of the calendar.\n- **week-number-inner** - Week number inner element of the calendar.\n- **date** - Date element of the calendar.\n- **date-inner** - Date inner element of the calendar.\n- **first** - The first selected date element of the calendar in range selection.\n- **last** - The last selected date element of the calendar in range selection.\n- **inactive** - Inactive date element of the calendar.\n- **hidden** - Hidden date element of the calendar.\n- **weekend** - Weekend date element of the calendar.\n- **range** - Range selected element of the calendar.\n- **special** - Special date element of the calendar.\n- **disabled** - Disabled date element of the calendar.\n- **single** - Single selected date element of the calendar.\n- **preview** - Range selection preview date element of the calendar.\n- **month** - Month element of the calendar.\n- **month-inner** - Month inner element of the calendar.\n- **year** - Year element of the calendar.\n- **year-inner** - Year inner element of the calendar.\n- **selected** - Indicates selected state. Applies to date, month and year elements of the calendar.\n- **current** - Indicates current state. Applies to date, month and year elements of the calendar.","attributes":[{"name":"hide-outside-days","description":"Whether to show the dates that do not belong to the current active month.","values":[]},{"name":"hide-header","description":"Whether to render the calendar header part.\nWhen the calendar selection is set to `multiple` the header is always hidden.","values":[]},{"name":"header-orientation","description":"The orientation of the calendar header.","values":[{"name":"CalendarHeaderOrientation"}]},{"name":"orientation","description":"The orientation of the calendar months when more than one month\nis being shown.","values":[{"name":"ContentOrientation"}]},{"name":"visible-months","description":"The number of months displayed in the days view.","values":[]},{"name":"active-view","description":"The current active view of the component.","values":[{"name":"CalendarActiveView"}]},{"name":"value","description":"The current value of the calendar.\nUsed when selection is set to single","values":[{"name":"Date"}]},{"name":"values","description":"The current values of the calendar.\nUsed when selection is set to multiple of range.","values":[{"name":"Date[]"}]},{"name":"selection","description":"Sets the type of selection in the component.","values":[{"name":"CalendarSelection"}]},{"name":"show-week-numbers","description":"Whether to show the week numbers.","values":[]},{"name":"week-start","description":"Gets/Sets the first day of the week.","values":[{"name":"WeekDays"}]},{"name":"locale","description":"Gets/Sets the locale used for formatting and displaying the dates in the component.","values":[]},{"name":"active-date","description":"Get/Set the date which is shown in view and is highlighted. By default it is the current date.","values":[{"name":"Date"}]}],"references":[]},{"name":"igc-card-actions","description":"A container for card action items like buttons\n---\n\n\n### **Slots:**\n - **start** - Renders items at the beginning of actions area\n- _default_ - Renders items at the middle of actions area\n- **end** - Renders items at the end of actions area","attributes":[{"name":"orientation","description":"The orientation of the actions.","values":[{"name":"ContentOrientation"}]}],"references":[]},{"name":"igc-card-content","description":"A container for card's text content\n---\n\n\n### **Slots:**\n - _default_ - Renders the card text content","attributes":[],"references":[]},{"name":"igc-card-header","description":"A container for card's header\n---\n\n\n### **Slots:**\n - **thumbnail** - Renders header media like icon\n- **title** - Renders the card title\n- **subtitle** - Renders the card subtitle\n- _default_ - Renders content next to the card title\n\n### **CSS Parts:**\n - **header** - The card header container","attributes":[],"references":[]},{"name":"igc-card-media","description":"A container for card's media - could be an image, gif, video\n---\n\n\n### **Slots:**\n - _default_ - Renders the card media content","attributes":[],"references":[]},{"name":"igc-card","description":"A container which wraps different elements related to a single subject\n---\n\n\n### **Slots:**\n - _default_ - Renders card content","attributes":[{"name":"elevated","description":"Sets card elevated style, otherwise card looks outlined.","values":[]}],"references":[]},{"name":"igc-icon-button","description":"\n---\n\n\n### **Events:**\n \n\n### **CSS Parts:**\n - **base** - The wrapping element of the icon button.\n- **icon** - The icon element of the icon button.","attributes":[{"name":"name","description":"The name of the icon.","values":[]},{"name":"collection","description":"The name of the icon collection.","values":[]},{"name":"mirrored","description":"Whether to flip the icon button. Useful for RTL layouts.","values":[]},{"name":"variant","description":"The visual variant of the icon button.","values":[{"name":"IconButtonVariant"}]},{"name":"type","description":"The type of the button. Defaults to `button`.","values":[{"name":"button"},{"name":"reset"},{"name":"submit"}]},{"name":"href","description":"The URL the button points to.","values":[]},{"name":"download","description":"Prompts to save the linked URL instead of navigating to it.","values":[]},{"name":"target","description":"Where to display the linked URL, as the name for a browsing context.","values":[{"name":"_blank"},{"name":"_parent"},{"name":"_self"},{"name":"_top"}]},{"name":"rel","description":"The relationship of the linked URL.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types","values":[]},{"name":"disabled","description":"The disabled state of the component","values":[]}],"references":[]},{"name":"igc-divider","description":"The igc-divider allows the content author to easily create a horizontal/vertical rule as a break between content to better organize information on a page.\n---\n\n\n### **CSS Properties:**\n - **--color** - Sets the color of the divider. _(default: undefined)_\n- **--inset** - Shrinks the divider by the given amount from the start. If `middle` is set it will shrink from both sides. _(default: undefined)_","attributes":[{"name":"vertical","description":"Whether to render a vertical divider line.","values":[]},{"name":"middle","description":"When set and inset is provided, it will shrink the divider line from both sides.","values":[]},{"name":"type","description":"Whether to render a solid or a dashed divider line.","values":[{"name":"DividerType"}]}],"references":[]},{"name":"igc-resize","description":"\n---\n\n\n### **Events:**\n \n\n### **Slots:**\n - _default_ - renders the element(s) that should be resized\n- **side-adorner** - renders the side resize handle.\n- **corner-adorner** - renders the corner resize handle.\n- **bottom-adorner** - renders the bottom resize handle.","attributes":[{"name":"active","description":"Whether to always show the resize element adorners.","values":[]},{"name":"mode","description":"Get/Set the mode of the resizing operation.","values":[{"name":"ResizeMode"}]}],"references":[]},{"name":"igc-tile","description":"The tile component is used within the `igc-tile-manager` as a container\nfor displaying various types of information.\n---\n\n\n### **Events:**\n - **igcTileFullscreen** - Fired when tile the fullscreen state changes.\n- **igcTileMaximize** - Fired when tile the maximize state changes.\n- **igcTileDragStart** - Fired when a drag operation on a tile is about to begin. Cancelable.\n- **igcTileDragEnd** - Fired when a drag operation with a tile is successfully completed.\n- **igcTileDragCancel** - Fired when a tile drag operation is canceled by the user.\n- **igcTileResizeStart** - Fired when a resize operation on a tile is about to begin. Cancelable.\n- **igcTileResizeEnd** - Fired when a resize operation on a tile is successfully completed.\n- **igcTileResizeCancel** - Fired when a resize operation on a tile is canceled by the user.\n\n### **Slots:**\n - _default_ - Default slot for the tile's content.\n- **title** - Renders the title of the tile header.\n- **maximize-action** - Renders the maximize action element of the tile header.\n- **fullscreen-action** - Renders the fullscreen action element of the tile header.\n- **actions** - Renders items after the default actions in the tile header.\n- **side-adorner** - Renders the side resize handle of the tile.\n- **corner-adorner** - Renders the corner resize handle of the tile.\n- **bottom-adorner** - Renders the bottom resize handle of the tile.\n\n### **CSS Parts:**\n - **base** - The wrapper for the entire tile content, header and content.\n- **header** - The container for the tile header, including title and actions.\n- **title** - The title container of the tile.\n- **actions** - The actions container of the tile header.\n- **content-container** - The container wrapping the tile’s main content.\n- **trigger-side** - The part for the side adorner of the encapsulated resize element in the tile.\n- **trigger** - The part for the corner adorner of the encapsulated resize element in the tile.\n- **trigger-bottom** - The part for the bottom adorner of the encapsulated resize element in the tile.","attributes":[{"name":"col-span","description":"The number of columns the tile will span.","values":[]},{"name":"row-span","description":"The number of rows the tile will span.","values":[]},{"name":"col-start","description":"The starting column for the tile.","values":[]},{"name":"row-start","description":"The starting row for the tile.","values":[]},{"name":"maximized","description":"Indicates whether the tile occupies all available space within the layout.","values":[]},{"name":"disable-resize","description":"Indicates whether to disable tile resize behavior regardless\not its tile manager parent settings.","values":[]},{"name":"disable-fullscreen","description":"Whether to disable the rendering of the tile `fullscreen-action` slot and its\ndefault fullscreen action button.","values":[]},{"name":"disable-maximize","description":"Whether to disable the rendering of the tile `maximize-action` slot and its\ndefault maximize action button.","values":[]},{"name":"position","description":"Gets/sets the tile's visual position in the layout.\nCorresponds to the CSS `order` property.","values":[]}],"references":[]},{"name":"igc-tile-manager","description":"The tile manager component enables the dynamic arrangement, resizing, and interaction of tiles.\n---\n\n\n### **Slots:**\n - _default_ - Default slot for the tile manager. Only `igc-tile` elements will be projected inside the CSS grid container.\n\n### **CSS Properties:**\n - **--column-count** - The number of columns for the tile manager. The `column-count` attribute sets this variable. _(default: undefined)_\n- **--min-col-width** - The minimum size of the columns in the tile-manager. The `min-column-width` attribute sets this variable. _(default: undefined)_\n- **--min-row-height** - The minimum size of the rows in the tile-manager. The `min-row-height` attribute sets this variable. _(default: undefined)_\n- **--grid-gap** - The gap size of the underlying CSS grid container. The `gap` attributes sts this variable. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The tile manager CSS Grid container.","attributes":[{"name":"resize-mode","description":"Whether resize operations are enabled.","values":[{"name":"TileManagerResizeMode"}]},{"name":"drag-mode","description":"Whether drag and drop operations are enabled.","values":[{"name":"TileManagerDragMode"}]},{"name":"column-count","description":"Sets the number of columns for the tile manager.\nSetting value <= than zero will trigger a responsive layout.","values":[]},{"name":"min-column-width","description":"Sets the minimum width for a column unit in the tile manager.","values":[]},{"name":"min-row-height","description":"Sets the minimum height for a row unit in the tile manager.","values":[]},{"name":"gap","description":"Sets the gap size between tiles in the tile manager.","values":[]}],"references":[]},{"name":"igc-carousel-indicator","description":"Used when a custom indicator needs to be passed to the `igc-carousel` component.\n---\n\n\n### **Slots:**\n - _default_ - Default slot for projected inactive indicator.\n- **active** - Default slot for projected active indicator.\n\n### **CSS Parts:**\n - **indicator** - The wrapping container of the carousel dot indicator.\n- **inactive** - The wrapping container of the inactive dot indicator.\n- **active** - The wrapping container of the active dot indicator.","attributes":[],"references":[]},{"name":"igc-carousel-indicator-container","description":"\n---\n\n\n### **Slots:**\n - _default_ - Default slot for the carousel indicator container.\n\n### **CSS Parts:**\n - **base** - The wrapping container of all carousel indicators.","attributes":[],"references":[]},{"name":"igc-carousel-slide","description":"A single content container within a set of containers used in the context of an `igc-carousel`.\n---\n\n\n### **Slots:**\n - **Default** - slot for the carousel slide.","attributes":[{"name":"active","description":"The current active slide for the carousel component.","values":[]},{"name":"previous","values":[]}],"references":[]},{"name":"igc-carousel","description":"The `igc-carousel` presents a set of `igc-carousel-slide`s by sequentially displaying a subset of one or more slides.\n---\n\n\n### **Events:**\n - **igcSlideChanged** - Emitted when the current active slide is changed either by user interaction or by the interval callback.\n- **igcPlaying** - Emitted when the carousel enters playing state by a user interaction.\n- **igcPaused** - Emitted when the carousel enters paused state by a user interaction.\n\n### **Slots:**\n - **Default** - slot for the carousel. Any projected `igc-carousel-slide` components should be projected here.\n- **previous-button** - Renders content inside the previous button.\n- **next-button** - Renders content inside the next button.\n\n### **CSS Parts:**\n - **navigation** - The wrapper container of each carousel navigation button.\n- **previous** - The wrapper container of the carousel previous navigation button.\n- **next** - The wrapper container of the carousel next navigation button.\n- **dot** - The carousel dot indicator container.\n- **active** - The carousel active dot indicator container.\n- **label** - The label container of the carousel indicators.\n- **start** - The wrapping container of all carousel indicators when indicators-orientation is set to start.","attributes":[{"name":"disable-loop","description":"Whether the carousel should skip rotating to the first slide after it reaches the last.","values":[]},{"name":"disable-pause-on-interaction","description":"Whether the carousel should ignore use interactions and not pause on them.","values":[]},{"name":"hide-navigation","description":"Whether the carousel should skip rendering of the default navigation buttons.","values":[]},{"name":"hide-indicators","description":"Whether the carousel should render the indicator controls (dots).","values":[]},{"name":"vertical","description":"Whether the carousel has vertical alignment.","values":[]},{"name":"indicators-orientation","description":"Sets the orientation of the indicator controls (dots).","values":[{"name":"CarouselIndicatorsOrientation"}]},{"name":"indicators-label-format","description":"The format used to set the aria-label on the carousel indicators.\nInstances of '{0}' will be replaced with the index of the corresponding slide.","values":[]},{"name":"slides-label-format","description":"The format used to set the aria-label on the carousel slides and the text displayed\nwhen the number of indicators is greater than tha maximum indicator count.\nInstances of '{0}' will be replaced with the index of the corresponding slide.\nInstances of '{1}' will be replaced with the total amount of slides.","values":[]},{"name":"interval","description":"The duration in milliseconds between changing the active slide.","values":[]},{"name":"maximum-indicators-count","description":"Controls the maximum indicator controls (dots) that can be shown. Default value is `10`.","values":[]},{"name":"animation-type","description":"The animation type.","values":[{"name":"HorizontalTransitionAnimation"}]}],"references":[]},{"name":"igc-checkbox","description":"A check box allowing single values to be selected/deselected.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - _default_ - The checkbox label.\n- **helper-text** - Renders content below the input.\n- **value-missing** - Renders content when the required validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **base** - The base wrapper of the checkbox.\n- **control** - The checkbox input element.\n- **label** - The checkbox label.\n- **indicator** - The checkbox indicator icon.","attributes":[{"name":"indeterminate","description":"Draws the checkbox in indeterminate state.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"value","description":"The value attribute of the control.","values":[]},{"name":"checked","description":"The checked state of the control.","values":[]},{"name":"label-position","description":"The label position of the control.","values":[{"name":"ToggleLabelPosition"}]}],"references":[]},{"name":"igc-circular-gradient","description":"Used for defining gradient stops in the igc-circular-progress.\nFor each `igc-circular-gradient` defined as `gradient` slot of `igc-circular-progress` element would be created a SVG stop element.\nThe values passed as `color`, `offset` and `opacity` would be set as\n`stop-color`, `offset` and `stop-opacity` of the SVG element without further validations.\n---\n","attributes":[{"name":"offset","description":"Defines where the gradient stop is placed along the gradient vector","values":[]},{"name":"color","description":"Defines the color of the gradient stop","values":[]},{"name":"opacity","description":"Defines the opacity of the gradient stop","values":[]}],"references":[]},{"name":"igc-circular-progress","description":"A circular progress indicator used to express unspecified wait time or display\nthe length of a process.\n---\n\n\n### **Slots:**\n - _default_ - The text area container.\n- **gradient** - Customize the progress bar in order to use a color gradient instead of a solid color. Accepts `igc-circular-gradient` elements.\n\n### **CSS Parts:**\n - **svg** - The igc-circular-progress SVG element.\n- **gradient_start** - The igc-circular-progress linear-gradient start color.\n- **gradient_end** - The igc-circular-progress linear-gradient end color.\n- **track** - The igc-circular-progress ring track area.\n- **fill** - The igc-circular-progress indicator area.\n- **label** - The igc-circular-progress label.\n- **value** - The igc-circular-progress label value.\n- **indeterminate** - The igc-circular-progress indeterminate state.\n- **primary** - The igc-circular-progress primary state.\n- **danger** - The igc-circular-progress error state.\n- **warning** - The igc-circular-progress warning state.\n- **info** - The igc-circular-progress info state.\n- **success** - The igc-circular-progress success state.","attributes":[{"name":"max","description":"Maximum value of the control.","values":[]},{"name":"value","description":"The value of the control.","values":[]},{"name":"variant","description":"The variant of the control.","values":[{"name":"StyleVariant"}]},{"name":"animation-duration","description":"Animation duration in milliseconds.","values":[]},{"name":"indeterminate","description":"The indeterminate state of the control.","values":[]},{"name":"hide-label","description":"Shows/hides the label of the control.","values":[]},{"name":"label-format","description":"Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.","values":[]}],"references":[]},{"name":"igc-combo","description":"The Combo component is similar to the Select component in that it provides a list of options from which the user can make a selection.\nIn contrast to the Select component, the Combo component displays all options in a virtualized list of items,\nmeaning the combo box can simultaneously show thousands of options, where one or more options can be selected.\nAdditionally, users can create custom item templates, allowing for robust data visualization.\nThe Combo component features case-sensitive filtering, grouping, complex data binding, dynamic addition of values and more.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's selection has changed.\n- **igcOpening** - Emitted just before the list of options is opened.\n- **igcOpened** - Emitted after the list of options is opened.\n- **igcClosing** - Emitter just before the list of options is closed.\n- **igcClosed** - Emitted after the list of options is closed.\n\n### **Slots:**\n - **prefix** - Renders content before the input of the combo.\n- **suffix** - Renders content after the input of the combo.\n- **header** - Renders a container before the list of options of the combo.\n- **footer** - Renders a container after the list of options of the combo.\n- **helper-text** - Renders content below the input of the combo.\n- **toggle-icon** - Renders content inside the suffix container of the combo.\n- **clear-icon** - Renders content inside the suffix container of the combo.\n- **value-missing** - Renders content when the required validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **label** - The encapsulated text label of the combo.\n- **input** - The main input field of the combo.\n- **native-input** - The native input of the main input field of the combo.\n- **prefix** - The prefix wrapper of the combo.\n- **suffix** - The suffix wrapper of the combo.\n- **toggle-icon** - The toggle icon wrapper of the combo.\n- **clear-icon** - The clear icon wrapper of the combo.\n- **case-icon** - The case icon wrapper of the combo.\n- **helper-text** - The helper text wrapper of the combo.\n- **search-input** - The search input field of the combo.\n- **list-wrapper** - The list of options wrapper of the combo.\n- **list** - The list of options box of the combo.\n- **item** - Represents each item in the list of options of the combo.\n- **group-header** - Represents each header in the list of options of the combo.\n- **active** - Appended to the item parts list when the item is active of the combo.\n- **selected** - Appended to the item parts list when the item is selected of the combo.\n- **checkbox** - Represents each checkbox of each list item of the combo.\n- **checkbox-indicator** - Represents the checkbox indicator of each list item of the combo.\n- **checked** - Appended to checkbox parts list when checkbox is checked in the combo.\n- **header** - The container holding the header content of the combo.\n- **footer** - The container holding the footer content of the combo.\n- **empty** - The container holding the empty content of the combo.","attributes":[{"name":"outlined","description":"The outlined attribute of the control.","values":[]},{"name":"single-select","description":"Enables single selection mode and moves item filtering to the main input.","values":[]},{"name":"autofocus","description":"The autofocus attribute of the control.","values":[]},{"name":"autofocus-list","description":"Focuses the list of options when the menu opens.","values":[]},{"name":"label","description":"The label attribute of the control.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"placeholder-search","description":"The placeholder attribute of the search input.","values":[]},{"name":"open","description":"Sets the open state of the component.","values":[]},{"name":"value-key","description":"The key in the data source used when selecting items.","values":[]},{"name":"display-key","description":"The key in the data source used to display items in the list.","values":[]},{"name":"group-key","description":"The key in the data source used to group items in the list.","values":[]},{"name":"group-sorting","description":"Sorts the items in each group by ascending or descending order.","values":[{"name":"asc"},{"name":"desc"},{"name":"none"}]},{"name":"filtering-options","description":"An object that configures the filtering of the combo.","values":[{"name":"FilteringOptions<T>"}]},{"name":"case-sensitive-icon","description":"Enables the case sensitive search icon in the filtering input.","values":[]},{"name":"disable-filtering","description":"Disables the filtering of the list of options.","values":[]},{"name":"value","description":"Returns the current selection as a list of comma separated values,\nrepresented by the value key, when provided.","values":[{"name":"ComboValue<T>[]"}]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]}],"references":[]},{"name":"igc-date-picker","description":"igc-date-picker is a feature rich component used for entering a date through manual text input or\nchoosing date values from a calendar dialog that pops up.\n---\n\n\n### **Events:**\n - **igcOpening** - Emitted just before the calendar dropdown is shown.\n- **igcOpened** - Emitted after the calendar dropdown is shown.\n- **igcClosing** - Emitted just before the calendar dropdown is hidden.\n- **igcClosed** - Emitted after the calendar dropdown is hidden.\n- **igcChange** - Emitted when the user modifies and commits the elements's value.\n- **igcInput** - Emitted when when the user types in the element.\n\n### **Slots:**\n - **prefix** - Renders content before the input.\n- **suffix** - Renders content after the input.\n- **helper-text** - Renders content below the input.\n- **bad-input** - Renders content when the value is in the disabledDates ranges.\n- **value-missing** - Renders content when the required validation fails.\n- **range-overflow** - Renders content when the max validation fails.\n- **range-underflow** - Renders content when the min validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n- **title** - Renders content in the calendar title.\n- **header-date** - Renders content instead of the current date/range in the calendar header.\n- **clear-icon** - Renders a clear icon template.\n- **calendar-icon** - Renders the icon/content for the calendar picker.\n- **calendar-icon-open** - Renders the icon/content for the picker in open state.\n- **actions** - Renders content in the action part of the picker in open state.\n\n### **CSS Parts:**\n - **label** - The label wrapper that renders content above the target input.\n- **container** - The main wrapper that holds all main input elements.\n- **input** - The native input element.\n- **prefix** - The prefix wrapper.\n- **suffix** - The suffix wrapper.\n- **calendar-icon** - The calendar icon wrapper for closed state.\n- **calendar-icon-open** - The calendar icon wrapper for opened state.\n- **clear-icon** - The clear icon wrapper.\n- **actions** - The actions wrapper.\n- **helper-text** - The helper-text wrapper that renders content below the target input.\n- **header** - The calendar header element.\n- **header-title** - The calendar header title element.\n- **header-date** - The calendar header date element.\n- **calendar-content** - The calendar content element which contains the views and navigation elements.\n- **navigation** - The calendar navigation container element.\n- **months-navigation** - The calendar months navigation button element.\n- **years-navigation** - The calendar years navigation button element.\n- **years-range** - The calendar years range element.\n- **navigation-buttons** - The calendar navigation buttons container.\n- **navigation-button** - The calendar previous/next navigation button.\n- **days-view-container** - The calendar days view container element.\n- **days-view** - The calendar days view element.\n- **months-view** - The calendar months view element.\n- **years-view** - The calendar years view element.\n- **days-row** - The calendar days row element.\n- **calendar-label** - The calendar week header label element.\n- **week-number** - The calendar week number element.\n- **week-number-inner** - The calendar week number inner element.\n- **date** - The calendar date element.\n- **date-inner** - The calendar date inner element.\n- **first** - The calendar first selected date element in range selection.\n- **last** - The calendar last selected date element in range selection.\n- **inactive** - The calendar inactive date element.\n- **hidden** - The calendar hidden date element.\n- **weekend** - The calendar weekend date element.\n- **range** - The calendar range selected element.\n- **special** - The calendar special date element.\n- **disabled** - The calendar disabled date element.\n- **single** - The calendar single selected date element.\n- **preview** - The calendar range selection preview date element.\n- **month** - The calendar month element.\n- **month-inner** - The calendar month inner element.\n- **year** - The calendar year element.\n- **year-inner** - The calendar year inner element.\n- **selected** - The calendar selected state for element(s). Applies to date, month and year elements.\n- **current** - The calendar current state for element(s). Applies to date, month and year elements.","attributes":[{"name":"open","description":"Sets the state of the datepicker dropdown.","values":[]},{"name":"label","description":"The label of the datepicker.","values":[]},{"name":"mode","description":"Determines whether the calendar is opened in a dropdown or a modal dialog","values":[{"name":"PickerMode"}]},{"name":"non-editable","description":"Whether to allow typing in the input.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"value","description":"The value of the picker","values":[{"name":"Date"}]},{"name":"min","description":"The minimum value required for the date picker to remain valid.","values":[{"name":"Date"}]},{"name":"max","description":"The maximum value required for the date picker to remain valid.","values":[{"name":"Date"}]},{"name":"header-orientation","description":"The orientation of the calendar header.","values":[{"name":"CalendarHeaderOrientation"}]},{"name":"orientation","description":"The orientation of the multiple months displayed in the calendar's days view.","values":[{"name":"ContentOrientation"}]},{"name":"hide-header","description":"Determines whether the calendar hides its header.","values":[]},{"name":"hide-outside-days","description":"Controls the visibility of the dates that do not belong to the current month.","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"visible-months","description":"The number of months displayed in the calendar.","values":[]},{"name":"show-week-numbers","description":"Whether to show the number of the week in the calendar.","values":[]},{"name":"display-format","description":"Format to display the value in when not editing.\nDefaults to the input format if not set.","values":[]},{"name":"input-format","description":"The date format to apply on the input.\nDefaults to the current locale Intl.DateTimeFormat","values":[]},{"name":"locale","description":"The locale settings used to display the value.","values":[]},{"name":"prompt","description":"The prompt symbol to use for unfilled parts of the mask.","values":[]},{"name":"active-date","description":"Gets/Sets the date which is shown in the calendar picker and is highlighted.\nBy default it is the current date.","values":[{"name":"Date"}]},{"name":"week-start","description":"Sets the start day of the week for the calendar.","values":[{"name":"WeekDays"}]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"keep-open-on-select","description":"Whether the component dropdown should be kept open on selection.","values":[]},{"name":"keep-open-on-outside-click","description":"Whether the component dropdown should be kept open on clicking outside of it.","values":[]}],"references":[]},{"name":"igc-dropdown-item","description":"Represents an item in a dropdown list.\n---\n\n\n### **Slots:**\n - **prefix** - Renders content before the item's main content.\n- _default_ - Renders the item's main content.\n- **suffix** - Renders content after the item's main content.\n\n### **CSS Parts:**\n - **prefix** - The prefix wrapper of the igc-dropdown-item.\n- **content** - The main content wrapper of the igc-dropdown-item.\n- **suffix** - The suffix wrapper of the igc-dropdown-item.","attributes":[{"name":"active","description":"Whether the item is active.","values":[]},{"name":"disabled","description":"Whether the item is disabled.","values":[]},{"name":"selected","description":"Whether the item is selected.","values":[]},{"name":"value","description":"The current value of the item.\nIf not specified, the element's text content is used.","values":[]}],"references":[]},{"name":"igc-dropdown-group","description":"A container for a group of `igc-dropdown-item` components.\n---\n\n\n### **Slots:**\n - **label** - Contains the group's label.\n- _default_ - Intended to contain the items belonging to this group.\n\n### **CSS Parts:**\n - **label** - The native label element.","attributes":[],"references":[]},{"name":"igc-dropdown-header","description":"Represents a header item in a igc-dropdown list.\n---\n\n\n### **Slots:**\n - _default_ - Renders the header.","attributes":[],"references":[]},{"name":"igc-dropdown","description":"Represents a DropDown component.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the selected item changes.\n- **igcOpening** - Emitted just before the dropdown is open.\n- **igcOpened** - Emitted after the dropdown is open.\n- **igcClosing** - Emitter just before the dropdown is closed.\n- **igcClosed** - Emitted after closing the dropdown.\n\n### **Slots:**\n - **target** - Renders the dropdown's target element.\n- _default_ - Renders the dropdown list items.\n\n### **CSS Parts:**\n - **base** - The dropdown list wrapper container.\n- **list** - The dropdown list element.","attributes":[{"name":"placement","description":"The preferred placement of the component around the target element.","values":[{"name":"PopoverPlacement"}]},{"name":"scroll-strategy","description":"Determines the behavior of the component during scrolling of the parent container.","values":[{"name":"PopoverScrollStrategy"}]},{"name":"flip","description":"Whether the component should be flipped to the opposite side of the target once it's about to overflow the visible area.\nWhen true, once enough space is detected on its preferred side, it will flip back.","values":[]},{"name":"distance","description":"The distance from the target element.","values":[]},{"name":"same-width","description":"Whether the dropdown's width should be the same as the target's one.","values":[]},{"name":"keep-open-on-select","description":"Whether the component dropdown should be kept open on selection.","values":[]},{"name":"keep-open-on-outside-click","description":"Whether the component dropdown should be kept open on clicking outside of it.","values":[]},{"name":"open","description":"Sets the open state of the component.","values":[]}],"references":[]},{"name":"igc-file-input","description":"\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's checked state changes.\n- **igcCancel** - Emitted when the control's file picker dialog is canceled.\n\n### **Slots:**\n - **prefix** - Renders content before the input.\n- **suffix** - Renders content after input.\n- **helper-text** - Renders content below the input.\n- **file-selector-text** - Renders content for the browse button when input type is file.\n- **file-missing-text** - Renders content when input type is file and no file is chosen.\n- **value-missing** - Renders content when the required validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **container** - The main wrapper that holds all main input elements.\n- **input** - The native input element.\n- **label** - The native label element.\n- **file-names** - The file names wrapper when input type is 'file'.\n- **file-selector-button** - The browse button when input type is 'file'.\n- **prefix** - The prefix wrapper.\n- **suffix** - The suffix wrapper.\n- **helper-text** - The helper text wrapper.","attributes":[{"name":"value","description":"The value of the control.","values":[]},{"name":"multiple","description":"The multiple attribute of the control.\nUsed to indicate that a file input allows the user to select more than one file.","values":[]},{"name":"accept","description":"The accept attribute of the control.\nDefines the file types as a list of comma-separated values that the file input should accept.","values":[]},{"name":"autofocus","description":"The autofocus attribute of the control.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"label","description":"The label for the control.","values":[]}],"references":[]},{"name":"igc-select-item","description":"Represents an item in a select list.\n---\n\n\n### **Slots:**\n - _default_ - Renders the all content bar the prefix and suffix.\n- **prefix** - Renders content before the main content area.\n- **suffix** - Renders content after the main content area.\n\n### **CSS Parts:**\n - **prefix** - The prefix wrapper of the igc-select-item.\n- **content** - The main content wrapper of the igc-select-item.\n- **suffix** - The suffix wrapper of the igc-select-item.","attributes":[{"name":"active","description":"Whether the item is disabled.","values":[]},{"name":"disabled","description":"Whether the item is disabled.","values":[]},{"name":"selected","description":"Whether the item is selected.","values":[]},{"name":"value","description":"The current value of the item.\nIf not specified, the element's text content is used.","values":[]}],"references":[]},{"name":"igc-select-group","description":"\n---\n\n\n### **Slots:**\n - **label** - Contains the group's label.\n- _default_ - Intended to contain the items belonging to this group.\n\n### **CSS Parts:**\n - **label** - The native label element.","attributes":[{"name":"disabled","description":"Whether the group item and all its children are disabled.","values":[]}],"references":[]},{"name":"igc-select-header","description":"Represents a header item in an igc-select component.\n---\n\n\n### **Slots:**\n - _default_ - Renders the header.","attributes":[],"references":[]},{"name":"igc-select","description":"Represents a control that provides a menu of options.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's checked state changes.\n- **igcOpening** - Emitted just before the list of options is opened.\n- **igcOpened** - Emitted after the list of options is opened.\n- **igcClosing** - Emitter just before the list of options is closed.\n- **igcClosed** - Emitted after the list of options is closed.\n\n### **Slots:**\n - _default_ - Renders the list of select items.\n- **prefix** - Renders content before the input.\n- **suffix** - Renders content after input.\n- **header** - Renders a container before the list of options.\n- **footer** - Renders a container after the list of options.\n- **helper-text** - Renders content below the input.\n- **toggle-icon** - Renders content inside the suffix container.\n- **toggle-icon-expanded** - Renders content for the toggle icon when the component is in open state.\n- **value-missing** - Renders content when the required validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **list** - The list wrapping container for the items of the igc-select.\n- **input** - The encapsulated igc-input of the igc-select.\n- **label** - The encapsulated text label of the igc-select.\n- **prefix** - The prefix wrapper of the input of the igc-select.\n- **suffix** - The suffix wrapper of the input of the igc-select.\n- **toggle-icon** - The toggle icon wrapper of the igc-select.\n- **helper-text** - The helper text wrapper of the igc-select.","attributes":[{"name":"value","description":"The value attribute of the control.","values":[]},{"name":"outlined","description":"The outlined attribute of the control.","values":[]},{"name":"autofocus","description":"The autofocus attribute of the control.","values":[]},{"name":"distance","description":"The distance of the select dropdown from its input.","values":[]},{"name":"label","description":"The label attribute of the control.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"placement","description":"The preferred placement of the select dropdown around its input.","values":[{"name":"PopoverPlacement"}]},{"name":"scroll-strategy","description":"Determines the behavior of the component during scrolling of the parent container.","values":[{"name":"PopoverScrollStrategy"}]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"keep-open-on-select","description":"Whether the component dropdown should be kept open on selection.","values":[]},{"name":"keep-open-on-outside-click","description":"Whether the component dropdown should be kept open on clicking outside of it.","values":[]},{"name":"open","description":"Sets the open state of the component.","values":[]}],"references":[]},{"name":"igc-linear-progress","description":"A linear progress indicator used to express unspecified wait time or display\nthe length of a process.\n---\n\n\n### **Slots:**\n - _default_ - The text area container.\n\n### **CSS Parts:**\n - **track** - The igc-linear-progress track area.\n- **fill** - The igc-linear-progress indicator area.\n- **striped** - The igc-linear-progress striped indicator.\n- **label** - The igc-linear-progress label.\n- **value** - The igc-linear-progress label value.\n- **indeterminate** - The igc-linear-progress indeterminate state.\n- **primary** - The igc-linear-progress indicator primary state.\n- **danger** - The igc-linear-progress indicator error state.\n- **warning** - The igc-linear-progress indicator warning state.\n- **info** - The igc-linear-progress indicator info state.\n- **success** - The igc-linear-progress indicator success state.","attributes":[{"name":"striped","description":"Sets the striped look of the control.","values":[]},{"name":"label-align","description":"The position for the default label of the control.","values":[{"name":"LinearProgressLabelAlign"}]},{"name":"max","description":"Maximum value of the control.","values":[]},{"name":"value","description":"The value of the control.","values":[]},{"name":"variant","description":"The variant of the control.","values":[{"name":"StyleVariant"}]},{"name":"animation-duration","description":"Animation duration in milliseconds.","values":[]},{"name":"indeterminate","description":"The indeterminate state of the control.","values":[]},{"name":"hide-label","description":"Shows/hides the label of the control.","values":[]},{"name":"label-format","description":"Format string for the default label of the control.\nPlaceholders:\n {0} - current value of the control.\n {1} - max value of the control.","values":[]}],"references":[]},{"name":"igc-list-header","description":"Header list item.\n---\n\n\n### **Slots:**\n - _default_ - Renders header list item's content.","attributes":[],"references":[]},{"name":"igc-list-item","description":"The list-item component is a container\nintended for row items in the list component.\n---\n\n\n### **Slots:**\n - _default_ - Renders custom content.\n- **start** - Renders content before all other content.\n- **end** - Renders content after all other content.\n- **title** - Renders the title.\n- **subtitle** - Renders the subtitle.\n\n### **CSS Parts:**\n - **start** - The start container.\n- **end** - The end container.\n- **content** - The header and custom content container.\n- **header** - The title and subtitle container.\n- **title** - The title container.\n- **subtitle** - The subtitle container.","attributes":[{"name":"selected","description":"Defines if the list item is selected or not.","values":[]}],"references":[]},{"name":"igc-list","description":"Displays a collection of data items in a templatable list format.\n---\n\n\n### **Slots:**\n - _default_ - Renders the list items and list headers inside default slot.","attributes":[],"references":[]},{"name":"igc-mask-input","description":"A masked input is an input field where a developer can control user input and format the visible value,\nbased on configurable rules\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when the control receives user input\n- **igcChange** - Emitted when an alteration of the control's value is committed by the user\n\n### **Slots:**\n - **prefix** - Renders content before the input\n- **suffix** - Renders content after the input\n- **helper-text** - Renders content below the input\n- **value-missing** - Renders content when the required validation fails.\n- **bad-input** - Renders content when a required mask pattern validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **container** - The main wrapper that holds all main input elements\n- **input** - The native input element\n- **label** - The native label element\n- **prefix** - The prefix wrapper\n- **suffix** - The suffix wrapper\n- **helper-text** - The helper text wrapper","attributes":[{"name":"value-mode","description":"Dictates the behavior when retrieving the value of the control:\n\n- `raw` will return the clean user input.\n- `withFormatting` will return the value with all literals and prompts.","values":[{"name":"MaskInputValueMode"}]},{"name":"value","description":"The value of the input.\n\nRegardless of the currently set `value-mode`, an empty value will return an empty string.","values":[]},{"name":"mask","description":"The mask pattern to apply on the input.","values":[]},{"name":"prompt","description":"The prompt symbol to use for unfilled parts of the mask.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"label","description":"The label for the control.","values":[]}],"references":[]},{"name":"igc-nav-drawer-header-item","description":"A wrapper for navigation drawer's header.\n---\n\n\n### **Slots:**\n - _default_ - Renders the header content","attributes":[],"references":[]},{"name":"igc-nav-drawer-item","description":"Represents a navigation drawer item.\n---\n\n\n### **Slots:**\n - **content** - The content slot for the drawer item.\n- **icon** - The slot for the icon of the drawer item.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the drawer item.\n- **icon** - The icon container.\n- **content** - The content container.","attributes":[{"name":"disabled","description":"Determines whether the drawer is disabled.","values":[]},{"name":"active","description":"Determines whether the drawer is active.","values":[]}],"references":[]},{"name":"igc-nav-drawer","description":"Represents a side navigation container that provides\nquick access between views.\n---\n\n\n### **Slots:**\n - _default_ - The default slot for the igc-navigation-drawer.\n- **mini** - The slot for the mini variant of the igc-navigation-drawer.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the igc-navigation-drawer.\n- **main** - The main container of the igc-navigation-drawer.\n- **mini** - The mini container of the igc-navigation-drawer.","attributes":[{"name":"position","description":"The position of the drawer.","values":[{"name":"NavDrawerPosition"}]},{"name":"open","description":"Determines whether the drawer is opened.","values":[]}],"references":[]},{"name":"igc-navbar","description":"A navigation bar component is used to facilitate navigation through\na series of hierarchical screens within an app.\n---\n\n\n### **Slots:**\n - _default_ - Renders a title inside the default slot.\n- **start** - Renders left aligned icons.\n- **end** - Renders right aligned action icons.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the navigation bar.\n- **start** - The left aligned icon container.\n- **middle** - The navigation bar title container.\n- **end** - The right aligned action icons container.","attributes":[],"references":[]},{"name":"igc-radio","description":"\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - _default_ - The radio label.\n- **helper-text** - Renders content below the input.\n- **value-missing** - Renders content when the required validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **base** - The radio control base wrapper.\n- **control** - The radio input control.\n- **label** - The radio control label.","attributes":[{"name":"value","description":"The value attribute of the control.","values":[]},{"name":"checked","description":"The checked state of the control.","values":[]},{"name":"label-position","description":"The label position of the radio control.","values":[{"name":"ToggleLabelPosition"}]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]}],"references":[]},{"name":"igc-radio-group","description":"The igc-radio-group component unifies one or more igc-radio buttons.\n---\n\n\n### **Slots:**\n - _default_ - Default slot","attributes":[{"name":"alignment","description":"Alignment of the radio controls inside this group.","values":[{"name":"ContentOrientation"}]},{"name":"name","description":"Gets/Sets the name for all child igc-radio components.","values":[]},{"name":"value","description":"Gets/Sets the checked igc-radio element that matches `value`","values":[]}],"references":[]},{"name":"igc-rating-symbol","description":"\nUsed when a custom icon/symbol/element needs to be passed to the igc-rating component.\n---\n\n\n### **Slots:**\n - _default_ - Default slot for projected full symbols/icons.\n- **empty** - Default slot for projected empty symbols/icons.\n\n### **CSS Parts:**\n - **symbol** - The symbol wrapping container.\n- **full** - The full symbol wrapping container.\n- **empty** - The empty symbol wrapping container.","attributes":[],"references":[]},{"name":"igc-rating","description":"Rating provides insight regarding others' opinions and experiences,\nand can allow the user to submit a rating of their own\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the value of the control changes.\n- **igcHover** - Emitted when hover is enabled and the user mouses over a symbol of the rating.\n\n### **CSS Properties:**\n - **--symbol-size** - The size of the symbols. _(default: undefined)_\n- **--symbol-full-color** - The color of the filled symbol. _(default: undefined)_\n- **--symbol-empty-color** - The color of the empty symbol. _(default: undefined)_\n- **--symbol-full-filter** - The filter(s) used for the filled symbol. _(default: undefined)_\n- **--symbol-empty-filter** - The filter(s) used for the empty symbol. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The main wrapper which holds all of the rating elements.\n- **label** - The label part.\n- **value-label** - The value label part.\n- **symbols** - A wrapper for all rating symbols.\n- **symbol** - The part of the encapsulated default symbol.\n- **full** - The part of the encapsulated full symbols.\n- **empty** - The part of the encapsulated empty symbols.","attributes":[{"name":"max","description":"The maximum value for the rating.\n\nIf there are projected symbols, the maximum value will be resolved\nbased on the number of symbols.","values":[]},{"name":"step","description":"The minimum value change allowed.\n\nValid values are in the interval between 0 and 1 inclusive.","values":[]},{"name":"label","description":"The label of the control.","values":[]},{"name":"value-format","description":"A format string which sets aria-valuetext. Instances of '{0}' will be replaced\nwith the current value of the control and instances of '{1}' with the maximum value for the control.\n\nImportant for screen-readers and useful for localization.","values":[]},{"name":"value","description":"The current value of the component","values":[]},{"name":"hover-preview","description":"Sets hover preview behavior for the component","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"single","description":"Toggles single selection visual mode.","values":[]},{"name":"allow-reset","description":"Whether to reset the rating when the user selects the same value.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]}],"references":[]},{"name":"igc-ripple","description":"A ripple can be applied to an element to represent\ninteractive surface.\n---\n","attributes":[],"references":[]},{"name":"igc-slider-label","description":"Allows formatting the values of the slider as string values.\nThe text content of the slider labels is used for thumb and tick labels.\n---\n","attributes":[],"references":[]},{"name":"igc-range-slider","description":"A range slider component used to select two numeric values within a range.\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when a value is changed via thumb drag or keyboard interaction.\n- **igcChange** - Emitted when a value change is committed on a thumb drag end or keyboard interaction.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the slider.\n- **ticks** - The ticks container.\n- **tick-group** - The tick group container.\n- **tick** - The tick element.\n- **tick-label** - The tick label element.\n- **tick-label-inner** - The inner element of the tick label.\n- **thumbs** - The thumbs container.\n- **thumb** - The thumb element.\n- **thumb-label** - The thumb tooltip label container.\n- **thumb-label-inner** - The thumb tooltip label inner element.\n- **track** - The track container.\n- **steps** - The track steps element.\n- **inactive** - The inactive element of the track.\n- **fill** - The filled part of the track.","attributes":[{"name":"lower","description":"The current value of the lower thumb.","values":[]},{"name":"upper","description":"The current value of the upper thumb.","values":[]},{"name":"thumb-label-lower","description":"The aria label for the lower thumb.","values":[]},{"name":"thumb-label-upper","description":"The aria label for the upper thumb.","values":[]},{"name":"min","description":"The minimum value of the slider scale. Defaults to 0.\n\nIf `min` is greater than `max` the call is a no-op.\n\nIf `labels` are provided (projected), then `min` is always set to 0.\n\nIf `lowerBound` ends up being less than than the current `min` value,\nit is automatically assigned the new `min` value.","values":[]},{"name":"max","description":"The maximum value of the slider scale. Defaults to 100.\n\nIf `max` is less than `min` the call is a no-op.\n\nIf `labels` are provided (projected), then `max` is always set to\nthe number of labels.\n\nIf `upperBound` ends up being greater than than the current `max` value,\nit is automatically assigned the new `max` value.","values":[]},{"name":"lower-bound","description":"The lower bound of the slider value. If not set, the `min` value is applied.","values":[]},{"name":"upper-bound","description":"The upper bound of the slider value. If not set, the `max` value is applied.","values":[]},{"name":"disabled","description":"Disables the UI interactions of the slider.","values":[]},{"name":"discrete-track","description":"Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.","values":[]},{"name":"hide-tooltip","description":"Hides the thumb tooltip.","values":[]},{"name":"step","description":"Specifies the granularity that the value must adhere to.\n\nIf set to 0 no stepping is implied and any value in the range is allowed.\nIf `labels` are provided (projected) then the step is always assumed to be 1 since it is a discrete slider.","values":[]},{"name":"primary-ticks","description":"The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.","values":[]},{"name":"secondary-ticks","description":"The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.","values":[]},{"name":"tick-orientation","description":"Changes the orientation of the ticks.","values":[{"name":"SliderTickOrientation"}]},{"name":"hide-primary-labels","description":"Hides the primary tick labels.","values":[]},{"name":"hide-secondary-labels","description":"Hides the secondary tick labels.","values":[]},{"name":"locale","description":"The locale used to format the thumb and tick label values in the slider.","values":[]},{"name":"value-format","description":"String format used for the thumb and tick label values in the slider.","values":[]},{"name":"tick-label-rotation","description":"The degrees for the rotation of the tick labels. Defaults to 0.","values":[{"name":"SliderTickLabelRotation"}]}],"references":[]},{"name":"igc-snackbar","description":"A snackbar component is used to provide feedback about an operation\nby showing a brief message at the bottom of the screen.\n---\n\n\n### **Events:**\n - **igcAction** - Emitted when the snackbar action button is clicked.\n\n### **Slots:**\n - _default_ - Default slot to render the snackbar content.\n- **action** - Renders the action part of the snackbar. Usually an interactive element (button)\n\n### **CSS Parts:**\n - **base** - The base wrapper of the snackbar component.\n- **message** - The snackbar message.\n- **action** - The default snackbar action button.\n- **action-container** - The area holding the actions.","attributes":[{"name":"action-text","description":"The snackbar action button.","values":[]},{"name":"open","description":"Whether the component is in shown state.","values":[]},{"name":"display-time","description":"Determines the duration in ms in which the component will be visible.","values":[]},{"name":"keep-open","description":"Determines whether the component should close after the `displayTime` is over.","values":[]},{"name":"position","description":"Sets the position of the component in the viewport.","values":[{"name":"AbsolutePosition"}]}],"references":[]},{"name":"igc-slider","description":"A slider component used to select numeric value within a range.\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when a value is changed via thumb drag or keyboard interaction.\n- **igcChange** - Emitted when a value change is committed on a thumb drag end or keyboard interaction.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the slider.\n- **ticks** - The ticks container.\n- **tick-group** - The tick group container.\n- **tick** - The tick element.\n- **tick-label** - The tick label element.\n- **tick-label-inner** - The inner element of the tick label.\n- **thumbs** - The thumbs container.\n- **thumb** - The thumb element.\n- **thumb-label** - The thumb tooltip label container.\n- **thumb-label-inner** - The thumb tooltip label inner element.\n- **track** - The track container.\n- **steps** - The track steps element.\n- **inactive** - The inactive element of the track.\n- **fill** - The filled part of the track.","attributes":[{"name":"value","description":"The current value of the component.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"min","description":"The minimum value of the slider scale. Defaults to 0.\n\nIf `min` is greater than `max` the call is a no-op.\n\nIf `labels` are provided (projected), then `min` is always set to 0.\n\nIf `lowerBound` ends up being less than than the current `min` value,\nit is automatically assigned the new `min` value.","values":[]},{"name":"max","description":"The maximum value of the slider scale. Defaults to 100.\n\nIf `max` is less than `min` the call is a no-op.\n\nIf `labels` are provided (projected), then `max` is always set to\nthe number of labels.\n\nIf `upperBound` ends up being greater than than the current `max` value,\nit is automatically assigned the new `max` value.","values":[]},{"name":"lower-bound","description":"The lower bound of the slider value. If not set, the `min` value is applied.","values":[]},{"name":"upper-bound","description":"The upper bound of the slider value. If not set, the `max` value is applied.","values":[]},{"name":"discrete-track","description":"Marks the slider track as discrete so it displays the steps.\nIf the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.","values":[]},{"name":"hide-tooltip","description":"Hides the thumb tooltip.","values":[]},{"name":"step","description":"Specifies the granularity that the value must adhere to.\n\nIf set to 0 no stepping is implied and any value in the range is allowed.\nIf `labels` are provided (projected) then the step is always assumed to be 1 since it is a discrete slider.","values":[]},{"name":"primary-ticks","description":"The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.","values":[]},{"name":"secondary-ticks","description":"The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.","values":[]},{"name":"tick-orientation","description":"Changes the orientation of the ticks.","values":[{"name":"SliderTickOrientation"}]},{"name":"hide-primary-labels","description":"Hides the primary tick labels.","values":[]},{"name":"hide-secondary-labels","description":"Hides the secondary tick labels.","values":[]},{"name":"locale","description":"The locale used to format the thumb and tick label values in the slider.","values":[]},{"name":"value-format","description":"String format used for the thumb and tick label values in the slider.","values":[]},{"name":"tick-label-rotation","description":"The degrees for the rotation of the tick labels. Defaults to 0.","values":[{"name":"SliderTickLabelRotation"}]}],"references":[]},{"name":"igc-tab","description":"A tab element slotted into an `igc-tabs` container.\n---\n\n\n### **Slots:**\n - _default_ - Renders the tab's content.\n- **label** - Renders the tab header's label.\n- **prefix** - Renders the tab header's prefix.\n- **suffix** - Renders the tab header's suffix.\n\n### **CSS Parts:**\n - **tab-header** - The header of a single tab.\n- **prefix** - Tab header's label prefix.\n- **content** - Tab header's label slot container.\n- **suffix** - Tab header's label suffix.\n- **tab-body** - Holds the body content of a single tab, only the body of the selected tab is visible.","attributes":[{"name":"label","description":"The tab item label.","values":[]},{"name":"selected","description":"Determines whether the tab is selected.","values":[]},{"name":"disabled","description":"Determines whether the tab is disabled.","values":[]}],"references":[]},{"name":"igc-tabs","description":"Tabs organize and allow navigation between groups of content that are related and at the same level of hierarchy.\n\nThe `<igc-tabs>` component allows the user to navigate between multiple `<igc-tab>` elements.\nIt supports keyboard navigation and provides API methods to control the selected tab.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the selected tab changes.\n\n### **Slots:**\n - _default_ - Renders the `IgcTabComponents` inside default slot.\n\n### **CSS Parts:**\n - **start-scroll-button** - The start scroll button displayed when the tabs overflow.\n- **end-scroll-button** - The end scroll button displayed when the tabs overflow.\n- **selected-indicator** - The indicator that shows which tab is selected.","attributes":[{"name":"alignment","description":"Sets the alignment for the tab headers","values":[{"name":"TabsAlignment"}]},{"name":"activation","description":"Determines the tab activation. When set to auto,\nthe tab is instantly selected while navigating with the Left/Right Arrows, Home or End keys\nand the corresponding panel is displayed.\nWhen set to manual, the tab is only focused. The selection happens after pressing Space or Enter.","values":[{"name":"TabsActivation"}]}],"references":[]},{"name":"igc-toast","description":"A toast component is used to show a notification\n---\n\n\n### **CSS Parts:**\n - **base** - The base wrapper of the toast.","attributes":[{"name":"open","description":"Whether the component is in shown state.","values":[]},{"name":"display-time","description":"Determines the duration in ms in which the component will be visible.","values":[]},{"name":"keep-open","description":"Determines whether the component should close after the `displayTime` is over.","values":[]},{"name":"position","description":"Sets the position of the component in the viewport.","values":[{"name":"AbsolutePosition"}]}],"references":[]},{"name":"igc-switch","description":"Similar to a checkbox, a switch controls the state of a single setting on or off.\n---\n\n\n### **Events:**\n - **igcChange** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - _default_ - The switch label.\n\n### **CSS Parts:**\n - **base** - The base wrapper of the switch.\n- **control** - The switch input element.\n- **thumb** - The position indicator of the switch.\n- **label** - The switch label.","attributes":[{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]},{"name":"value","description":"The value attribute of the control.","values":[]},{"name":"checked","description":"The checked state of the control.","values":[]},{"name":"label-position","description":"The label position of the control.","values":[{"name":"ToggleLabelPosition"}]}],"references":[]},{"name":"igc-textarea","description":"This element represents a multi-line plain-text editing control,\nuseful when you want to allow users to enter a sizeable amount of free-form text,\nfor example a comment on a review or feedback form.\n---\n\n\n### **Events:**\n - **igcInput** - Emitted when the control receives user input.\n- **igcChange** - Emitted when the a change to the control value is committed by the user.\n\n### **Slots:**\n - _default_ - Text content from the default slot will be used as the value of the component.\n- **prefix** - Renders content before the input.\n- **suffix** - Renders content after input.\n- **helper-text** - Renders content below the input.\n- **value-missing** - Renders content when the required validation fails.\n- **too-long** - Renders content when the maxlength validation fails.\n- **too-short** - Renders content when the minlength validation fails.\n- **custom-error** - Renders content when setCustomValidity(message) is set.\n- **invalid** - Renders content when the component is in invalid state (validity.valid = false).\n\n### **CSS Parts:**\n - **container** - The main wrapper that holds all main input elements of the textarea.\n- **input** - The native input element of the igc-textarea.\n- **label** - The native label element of the igc-textarea.\n- **prefix** - The prefix wrapper of the igc-textarea.\n- **suffix** - The suffix wrapper of the igc-textarea.\n- **helper-text** - The helper text wrapper of the igc-textarea.","attributes":[{"name":"autocomplete","description":"Specifies what if any permission the browser has to provide for automated assistance in filling out form field values,\nas well as guidance to the browser as to the type of information expected in the field.\nRefer to [this page](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for additional information.","values":[]},{"name":"autocapitalize","description":"Controls whether and how text input is automatically capitalized as it is entered/edited by the user.\n\n[MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize).","values":[]},{"name":"inputmode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents.\nThis allows a browser to display an appropriate virtual keyboard.\n\n[MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)","values":[]},{"name":"label","description":"The label for the control.","values":[]},{"name":"maxlength","description":"The maximum number of characters (UTF-16 code units) that the user can enter.\nIf this value isn't specified, the user can enter an unlimited number of characters.","values":[]},{"name":"minlength","description":"The minimum number of characters (UTF-16 code units) required that the user should enter.","values":[]},{"name":"outlined","description":"Whether the control will have outlined appearance.","values":[]},{"name":"placeholder","description":"The placeholder attribute of the control.","values":[]},{"name":"readonly","description":"Makes the control a readonly field.","values":[]},{"name":"resize","description":"Controls whether the control can be resized.\nWhen `auto` is set, the control will try to expand and fit its content.","values":[{"name":"TextareaResize"}]},{"name":"rows","description":"The number of visible text lines for the control. If it is specified, it must be a positive integer.\nIf it is not specified, the default value is 2.","values":[]},{"name":"value","description":"The value of the component","values":[]},{"name":"spellcheck","description":"Controls whether the element may be checked for spelling errors.","values":[]},{"name":"wrap","description":"Indicates how the control should wrap the value for form submission.\nRefer to [this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attributes)\nfor explanation of the available values.","values":[{"name":"hard"},{"name":"soft"},{"name":"off"}]},{"name":"validate-only","description":"Enables validation rules to be evaluated without restricting user input. This applies to the `maxLength` property\nwhen it is defined.","values":[]},{"name":"required","description":"When set, makes the component a required field for validation.","values":[]},{"name":"name","description":"The name attribute of the control.","values":[]},{"name":"disabled","description":"The disabled state of the component.","values":[]},{"name":"invalid","description":"Sets the control into invalid state (visual state only).","values":[]}],"references":[]},{"name":"igc-tree-item","description":"The tree-item component represents a child item of the tree component or another tree item.\n---\n\n\n### **Slots:**\n - _default_ - Renders nested tree-item component.\n- **label** - Renders the tree item container.\n- **indicator** - Renders the expand indicator container.\n- **loading** - Renders the tree item loading indicator container.\n- **indentation** - Renders the container (by default the space) before the tree item.\n\n### **CSS Parts:**\n - **wrapper** - The wrapper for the tree item.\n- **selected** - Indicates selected state. Applies to `wrapper`.\n- **focused** - Indicates focused state. Applies to `wrapper`.\n- **active** - Indicates an active state. Applies to `wrapper`.\n- **indicator** - The expand indicator of the tree item.\n- **label** - The tree item content.\n- **text** - The tree item displayed text.\n- **select** - The checkbox of the tree item when selection is enabled.","attributes":[{"name":"label","description":"The tree item label.","values":[]},{"name":"expanded","description":"The tree item expansion state.","values":[]},{"name":"active","description":"Marks the item as the tree's active item.","values":[]},{"name":"disabled","description":"Get/Set whether the tree item is disabled. Disabled items are ignored for user interactions.","values":[]},{"name":"selected","description":"The tree item selection state.","values":[]},{"name":"loading","description":"To be used for load-on-demand scenarios in order to specify whether the item is loading data.","values":[]},{"name":"value","description":"The value entry that the tree item is visualizing. Required for searching through items.","values":[]}],"references":[]},{"name":"igc-tree","description":"The tree allows users to represent hierarchical data in a tree-view structure,\nmaintaining parent-child relationships, as well as to define static tree-view structure without a corresponding data model.\n---\n\n\n### **Events:**\n - **igcSelection** - Emitted when item selection is changing, before the selection completes.\n- **igcItemCollapsed** - Emitted when tree item is collapsed.\n- **igcItemCollapsing** - Emitted when tree item is about to collapse.\n- **igcItemExpanded** - Emitted when tree item is expanded.\n- **igcItemExpanding** - Emitted when tree item is about to expand.\n- **igcActiveItem** - Emitted when the tree's `active` item changes.\n\n### **Slots:**\n - _default_ - Renders the tree items inside default slot.","attributes":[{"name":"single-branch-expand","description":"Whether a single or multiple of a parent's child items can be expanded.","values":[]},{"name":"toggle-node-on-click","description":"Whether clicking over nodes will change their expanded state or not.","values":[]},{"name":"selection","description":"The selection state of the tree.","values":[{"name":"TreeSelection"}]}],"references":[]},{"name":"igc-step","description":"The step component is used within the `igc-stepper` element and it holds the content of each step.\nIt also supports custom indicators, title and subtitle.\n---\n\n\n### **Events:**\n - **stepActiveChanged**\n- **stepDisabledInvalidChanged**\n- **stepCompleteChanged**\n- **stepHeaderKeydown**\n\n### **Slots:**\n - _default_ - Renders the content of the step.\n- **indicator** - Renders the indicator of the step. By default, it displays the step index + 1.\n- **title** - Renders the title of the step.\n- **subtitle** - Renders the subtitle of the step.\n\n### **CSS Parts:**\n - **header-container** - Wrapper of the step's `header` and its separators.\n- **disabled** - Indicates a disabled state. Applies to `header-container`.\n- **complete-start** - Indicates a complete state of the current step. Applies to `header-container`.\n- **complete-end** - Indicates a complete state of the previous step. Applies to `header-container`.\n- **optional** - Indicates an optional state. Applies to `header-container`.\n- **invalid** - Indicates an invalid state. Applies to `header-container`.\n- **top** - Indicates that the title should be above the indicator. Applies to `header-container`.\n- **bottom** - Indicates that the title should be below the indicator. Applies to `header-container`.\n- **start** - Indicates that the title should be before the indicator. Applies to `header-container`.\n- **end** - Indicates that the title should be after the indicator. Applies to `header-container`.\n- **header** - Wrapper of the step's `indicator` and `text`.\n- **indicator** - The indicator of the step.\n- **text** - Wrapper of the step's `title` and `subtitle`.\n- **empty** - Indicates that no title and subtitle has been provided to the step. Applies to `text`.\n- **title** - The title of the step.\n- **subtitle** - The subtitle of the step.\n- **body** - Wrapper of the step's `content`.\n- **content** - The steps `content`.","attributes":[{"name":"invalid","description":"Gets/sets whether the step is invalid.","values":[]},{"name":"active","description":"Gets/sets whether the step is activе.","values":[]},{"name":"optional","description":"Gets/sets whether the step is optional.","values":[]},{"name":"disabled","description":"Gets/sets whether the step is interactable.","values":[]},{"name":"complete","description":"Gets/sets whether the step is completed.","values":[]}],"references":[]},{"name":"igc-stepper","description":"IgxStepper provides a wizard-like workflow by dividing content into logical steps.\n---\n\n\n### **Events:**\n - **igcActiveStepChanging** - Emitted when the active step is about to change.\n- **igcActiveStepChanged** - Emitted when the active step is changed.\n\n### **Slots:**\n - _default_ - Renders the step components inside default slot.","attributes":[{"name":"vertical-animation","description":"The animation type when in vertical mode.","values":[{"name":"StepperVerticalAnimation"}]},{"name":"horizontal-animation","description":"The animation type when in horizontal mode.","values":[{"name":"HorizontalTransitionAnimation"}]},{"name":"animation-duration","description":"The animation duration in either vertical or horizontal mode.","values":[]},{"name":"orientation","description":"Gets/Sets the orientation of the stepper.","values":[{"name":"StepperOrientation"}]},{"name":"step-type","description":"Get/Set the type of the steps.","values":[{"name":"StepperStepType"}]},{"name":"linear","description":"Get/Set whether the stepper is linear.","values":[]},{"name":"content-top","description":"Get/Set whether the content is displayed above the steps.","values":[]},{"name":"title-position","description":"Get/Set the position of the steps title.","values":[{"name":"StepperTitlePosition"}]}],"references":[]},{"name":"igc-tooltip","description":"Provides a way to display supplementary information related to an element when a user interacts with it (e.g., hover, focus).\nIt offers features such as placement customization, delays, sticky mode, and animations.\n---\n\n\n### **Events:**\n - **igcOpening** - Emitted before the tooltip begins to open. Can be canceled to prevent opening.\n- **igcOpened** - Emitted after the tooltip has successfully opened and is visible.\n- **igcClosing** - Emitted before the tooltip begins to close. Can be canceled to prevent closing.\n- **igcClosed** - Emitted after the tooltip has been fully removed from view.\n\n### **Slots:**\n - _default_ - Default slot of the tooltip component.\n- **close-button** - Slot for custom sticky-mode close action (e.g., an icon/button).\n\n### **CSS Parts:**\n - **base** - The wrapping container of the tooltip content.","attributes":[{"name":"open","description":"Whether the tooltip is showing.","values":[]},{"name":"disable-arrow","description":"Whether to disable the rendering of the arrow indicator for the tooltip.","values":[]},{"name":"with-arrow","description":"Whether to render an arrow indicator for the tooltip.","values":[]},{"name":"offset","description":"The offset of the tooltip from the anchor in pixels.","values":[]},{"name":"placement","description":"Where to place the floating element relative to the parent anchor element.","values":[{"name":"PopoverPlacement"}]},{"name":"anchor","description":"An element instance or an IDREF to use as the anchor for the tooltip.","values":[{"name":"Element"}]},{"name":"show-triggers","description":"Which event triggers will show the tooltip.\nExpects a comma separate string of different event triggers.","values":[]},{"name":"hide-triggers","description":"Which event triggers will hide the tooltip.\nExpects a comma separate string of different event triggers.","values":[]},{"name":"show-delay","description":"Specifies the number of milliseconds that should pass before showing the tooltip.","values":[]},{"name":"hide-delay","description":"Specifies the number of milliseconds that should pass before hiding the tooltip.","values":[]},{"name":"message","description":"Specifies a plain text as tooltip content.","values":[]},{"name":"sticky","description":"Specifies if the tooltip remains visible until the user closes it via the close button or Esc key.","values":[]}],"references":[]}]
    }