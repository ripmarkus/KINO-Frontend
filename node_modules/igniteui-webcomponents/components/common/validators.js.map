{"version":3,"file":"validators.js","sourceRoot":"","sources":["../../../src/components/common/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarDay } from '../calendar/model.js';\nimport validatorMessages from './localization/validation-en.js';\nimport {\n  asNumber,\n  formatString,\n  isDefined,\n  numberOfDecimals,\n  roundPrecise,\n} from './util.js';\n\ntype ValidatorHandler<T> = (host: T) => boolean;\ntype ValidatorMessageFormat<T> = (host: T) => string;\n\n/** @ignore */\nexport interface Validator<T = any> {\n  key: keyof ValidityStateFlags;\n  message: string | ValidatorMessageFormat<T>;\n  isValid: ValidatorHandler<T>;\n}\n\nconst emailRegex =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport const requiredValidator: Validator<{\n  required: boolean;\n  value?: unknown;\n}> = {\n  key: 'valueMissing',\n  message: validatorMessages.required,\n  isValid: ({ required, value }) => (required ? !!value : true),\n};\n\nexport const requiredBooleanValidator: Validator<{\n  required: boolean;\n  checked: boolean;\n}> = {\n  key: 'valueMissing',\n  message: validatorMessages.required,\n  isValid: ({ required, checked }) => (required ? checked : true),\n};\n\nexport const minLengthValidator: Validator<{\n  minLength?: number;\n  value: string;\n}> = {\n  key: 'tooShort',\n  message: ({ minLength }) =>\n    formatString(validatorMessages.minLength, minLength),\n  isValid: ({ minLength, value }) =>\n    minLength && value ? value.length >= asNumber(minLength) : true,\n};\n\nexport const maxLengthValidator: Validator<{\n  maxLength?: number;\n  value: string;\n}> = {\n  key: 'tooLong',\n  message: ({ maxLength }) =>\n    formatString(validatorMessages.maxLength, maxLength),\n  isValid: ({ maxLength, value }) =>\n    maxLength && value ? value.length <= asNumber(maxLength) : true,\n};\n\nexport const patternValidator: Validator<{ pattern?: string; value: string }> =\n  {\n    key: 'patternMismatch',\n    message: validatorMessages.pattern,\n    isValid: ({ pattern, value }) =>\n      pattern && value ? new RegExp(pattern, 'u').test(value) : true,\n  };\n\nexport const minValidator: Validator<{\n  min?: number;\n  value: number | string;\n}> = {\n  key: 'rangeUnderflow',\n  message: ({ min }) => formatString(validatorMessages.min, min),\n  isValid: ({ min, value }) =>\n    isDefined(value) && value !== '' && isDefined(min)\n      ? asNumber(value) >= asNumber(min)\n      : true,\n};\n\nexport const maxValidator: Validator<{\n  max?: number;\n  value: number | string;\n}> = {\n  key: 'rangeOverflow',\n  message: ({ max }) => formatString(validatorMessages.max, max),\n  isValid: ({ max, value }) =>\n    isDefined(value) && value !== '' && isDefined(max)\n      ? asNumber(value) <= asNumber(max)\n      : true,\n};\n\nexport const stepValidator: Validator<{\n  min?: number;\n  step?: number;\n  value: number | string;\n}> = {\n  key: 'stepMismatch',\n  message: 'Value does not conform to step constraint',\n  isValid: ({ min, step, value }) => {\n    if (isDefined(value) && value !== '' && isDefined(step)) {\n      const _value = asNumber(value) - asNumber(min);\n      const _step = asNumber(step);\n      const magnitude = numberOfDecimals(_step) + 1;\n      const rem = roundPrecise(\n        Math.abs(_value - _step * Math.round(_value / _step)),\n        magnitude\n      );\n\n      return !rem;\n    }\n    return true;\n  },\n};\n\nexport const emailValidator: Validator<{ value: string }> = {\n  key: 'typeMismatch',\n  message: validatorMessages.email,\n  isValid: ({ value }) => (value ? emailRegex.test(value) : true),\n};\n\nexport const urlValidator: Validator<{ value: string }> = {\n  key: 'typeMismatch',\n  message: validatorMessages.url,\n  isValid: ({ value }) => (value ? URL.canParse(value) : true),\n};\n\nexport const minDateValidator: Validator<{\n  value?: Date | null;\n  min?: Date | null;\n}> = {\n  key: 'rangeUnderflow',\n  message: ({ min }) => formatString(validatorMessages.min, min),\n  isValid: ({ value, min }) =>\n    value && min ? CalendarDay.compare(value, min) >= 0 : true,\n};\n\nexport const maxDateValidator: Validator<{\n  value?: Date | null;\n  max?: Date | null;\n}> = {\n  key: 'rangeOverflow',\n  message: ({ max }) => formatString(validatorMessages.max, max),\n  isValid: ({ value, max }) =>\n    value && max ? CalendarDay.compare(value, max) <= 0 : true,\n};\n"]}