{"version":3,"file":"drag.js","sourceRoot":"","sources":["../../../../src/components/common/controllers/drag.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  LitElement,\n  ReactiveController,\n  ReactiveControllerHost,\n} from 'lit';\nimport type { Ref } from 'lit/directives/ref.js';\n\nimport { getDefaultLayer } from '../../resize-container/default-ghost.js';\nimport { createAbortHandle } from '../abort-handler.js';\nimport {\n  findElementFromEventPath,\n  getRoot,\n  isLTR,\n  roundByDPR,\n} from '../util.js';\n\ntype DragCallback = (parameters: DragCallbackParameters) => unknown;\ntype DragCancelCallback = (state: DragState) => unknown;\n\nexport type DragCallbackParameters = {\n  event: PointerEvent;\n  state: DragState;\n};\n\ntype State = {\n  initial: DOMRect;\n  current: DOMRect;\n  position: { x: number; y: number };\n  offset: { x: number; y: number };\n  pointerState: {\n    previous: { x: number; y: number };\n    current: { x: number; y: number };\n    direction: Direction;\n  };\n};\n\ntype DragState = State & {\n  ghost: HTMLElement | null;\n  element: Element | null;\n};\n\ntype Direction = 'start' | 'end' | 'bottom' | 'top';\n\ntype DragControllerConfiguration = {\n  /** Whether the drag feature is enabled for the current host. */\n  enabled?: boolean;\n  /**\n   * The mode of the drag operation.\n   *\n   * Deferred will create a ghost element and keep the original element\n   * at its place until the operation completes successfully.\n   */\n  mode?: 'immediate' | 'deferred';\n  /**\n   * Whether starting a drag operation should snap the dragged item's top left corner\n   * to the cursor position.\n   */\n  snapToCursor?: boolean;\n  /**\n   * Guard function invoked during the `start` callback.\n   * Returning a truthy value will stop the current drag operation.\n   */\n  skip?: (event: PointerEvent) => boolean;\n\n  matchTarget?: (target: Element) => boolean;\n  /**\n   *\n   */\n  trigger?: () => HTMLElement;\n  /**\n   * Contain drag operations to the scope of the passed DOM element.\n   */\n  container?: Ref<HTMLElement>;\n  /**\n   * The DOM element that will \"host\" the ghost drag element when the controller\n   * is set to **deferred**.\n   *\n   * @remarks\n   * In **immediate** mode, this property is ignored.\n   */\n  layer?: () => HTMLElement;\n\n  ghost?: () => HTMLElement;\n\n  /** Callback invoked at the beginning of a drag operation. */\n  start?: DragCallback;\n  /** Callback invoked while dragging the target element.  */\n  move?: DragCallback;\n\n  enter?: DragCallback;\n\n  leave?: DragCallback;\n\n  over?: DragCallback;\n\n  /** Callback invoked during a drop operation. */\n  end?: DragCallback;\n  /** Callback invoked when a drag is cancelled */\n  cancel?: DragCancelCallback;\n};\n\nconst additionalEvents = [\n  'pointermove',\n  'lostpointercapture',\n  'contextmenu',\n] as const;\n\nclass DragController implements ReactiveController {\n  private readonly _host: ReactiveControllerHost & LitElement;\n  private readonly _options: DragControllerConfiguration = {\n    enabled: true,\n    mode: 'deferred',\n    snapToCursor: false,\n    layer: getDefaultLayer,\n  };\n\n  private readonly _abortHandle = createAbortHandle();\n\n  private _state!: State;\n\n  private _matchedElement!: Element | null;\n\n  private _id = -1;\n  private _hasPointerCapture = false;\n\n  private _ghost: HTMLElement | null = null;\n\n  /** Whether `snapToCursor` is enabled for the controller. */\n  private get _hasSnapping(): boolean {\n    return Boolean(this._options.snapToCursor);\n  }\n\n  /** Whether the current drag mode is deferred. */\n  private get _isDeferred(): boolean {\n    return this._options.mode === 'deferred';\n  }\n\n  /**\n   * The source element which will capture pointer events and initiate drag mode.\n   *\n   * @remarks\n   * By default that will be the host element itself, unless `trigger` is passed in.\n   */\n  private get _element(): HTMLElement {\n    return this._options.trigger?.() ?? this._host;\n  }\n\n  /**\n   * The element being dragged.\n   *\n   * @remarks\n   * When in **deferred** mode this returns a reference to the drag ghost element,\n   * otherwise it is the host element.\n   */\n  private get _dragItem(): HTMLElement {\n    return this._isDeferred ? this._ghost! : this._host;\n  }\n\n  /**\n   * The DOM element that will \"host\" the ghost drag element when the controller\n   * is set to **deferred**.\n   *\n   * @remarks\n   * In **immediate** mode, this property is ignored.\n   */\n  private get _layer(): HTMLElement {\n    if (!this._isDeferred) {\n      return this._host;\n    }\n\n    return this._options.layer?.() ?? this._host;\n  }\n\n  private get _stateParameters(): DragState {\n    return {\n      ...this._state,\n      ghost: this._ghost,\n      element: this._matchedElement,\n    };\n  }\n\n  constructor(\n    host: ReactiveControllerHost & LitElement,\n    options?: DragControllerConfiguration\n  ) {\n    this._host = host;\n    this._host.addController(this);\n    this.set(options);\n  }\n\n  // #region Public API\n\n  /** Whether the drag controller is enabled. */\n  public get enabled(): boolean {\n    return Boolean(this._options.enabled);\n  }\n\n  /** Updates the drag controller configuration. */\n  public set(options?: DragControllerConfiguration): void {\n    Object.assign(this._options, options);\n  }\n\n  /** Stops any drag operation and cleans up state, additional event listeners and elements. */\n  public dispose(): void {\n    this._matchedElement = null;\n    this._removeGhost();\n    this._setDragState(false);\n  }\n\n  /** @internal */\n  public hostConnected(): void {\n    const { signal } = this._abortHandle;\n\n    this._host.addEventListener('dragstart', this, { signal });\n    this._host.addEventListener('touchstart', this, { passive: false, signal });\n    this._host.addEventListener('pointerdown', this, { signal });\n  }\n\n  /** @internal */\n  public hostDisconnected(): void {\n    this._abortHandle.abort();\n    this._setDragCancelListener(false);\n    this._removeGhost();\n  }\n\n  /** @internal */\n  public handleEvent(event: PointerEvent & KeyboardEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    switch (event.type) {\n      case 'touchstart':\n      case 'dragstart':\n      // Prevent contextmenu default behavior during drag\n      case 'contextmenu':\n        event.preventDefault();\n        break;\n      case 'keydown':\n        this._handleCancel(event);\n        break;\n      case 'pointerdown':\n        this._handlePointerDown(event);\n        break;\n      case 'pointermove':\n        this._handlePointerMove(event);\n        break;\n      case 'lostpointercapture':\n        this._handlePointerEnd(event);\n        break;\n    }\n  }\n\n  // #endregion\n\n  // #region Event handlers\n\n  private _handlePointerDown(event: PointerEvent): void {\n    if (this._shouldSkip(event)) {\n      return;\n    }\n\n    this._setInitialState(event);\n    this._createDragGhost();\n    this._updatePosition(event);\n\n    const parameters = {\n      event,\n      state: this._stateParameters,\n    };\n\n    if (this._options.start?.call(this._host, parameters) === false) {\n      this.dispose();\n      return;\n    }\n\n    this._assignPosition(this._dragItem);\n    this._setDragState();\n  }\n\n  private _handlePointerMove(event: PointerEvent): void {\n    if (!this._hasPointerCapture) {\n      return;\n    }\n\n    this._updatePosition(event);\n    this._updatePointerState(event);\n    this._updateMatcher(event);\n\n    const parameters = {\n      event,\n      state: this._stateParameters,\n    };\n\n    this._options.move?.call(this._host, parameters);\n\n    this._assignPosition(this._dragItem);\n  }\n\n  private _handlePointerEnd(event: PointerEvent): void {\n    this._options.end?.call(this._host, {\n      event,\n      state: this._stateParameters,\n    });\n    this.dispose();\n  }\n\n  private _handleCancel(event: KeyboardEvent): void {\n    const key = event.key.toLowerCase();\n\n    if (this._hasPointerCapture && key === 'escape') {\n      // Reset state\n      this._options.cancel?.call(this._host, this._stateParameters);\n    }\n  }\n\n  // #endregion\n\n  private _setDragCancelListener(enabled = true): void {\n    enabled\n      ? globalThis.addEventListener('keydown', this)\n      : globalThis.removeEventListener('keydown', this);\n  }\n\n  private _setInitialState({\n    pointerId,\n    clientX,\n    clientY,\n  }: PointerEvent): void {\n    const rect = this._host.getBoundingClientRect();\n    const position = { x: rect.x, y: rect.y };\n    const offset = { x: rect.x - clientX, y: rect.y - clientY };\n\n    this._id = pointerId;\n    this._state = {\n      initial: rect,\n      current: structuredClone(rect),\n      position,\n      offset,\n      pointerState: {\n        previous: { x: clientX, y: clientY },\n        current: { x: clientX, y: clientY },\n        direction: 'end',\n      },\n    };\n  }\n\n  private _setDragState(enabled = true): void {\n    this._hasPointerCapture = enabled;\n    const cssValue = enabled ? 'none' : '';\n\n    Object.assign(this._element.style, {\n      touchAction: cssValue,\n      userSelect: cssValue,\n    });\n\n    enabled\n      ? this._element.setPointerCapture(this._id)\n      : this._element.releasePointerCapture(this._id);\n\n    this._setDragCancelListener(enabled);\n\n    // Toggle additional events\n    for (const type of additionalEvents) {\n      enabled\n        ? this._host.addEventListener(type, this)\n        : this._host.removeEventListener(type, this);\n    }\n  }\n\n  private _updateMatcher(event: PointerEvent) {\n    if (!this._options.matchTarget) {\n      return;\n    }\n\n    const match = getRoot(this._host)\n      .elementsFromPoint(event.clientX, event.clientY)\n      .find((element) => this._options.matchTarget!.call(this._host, element));\n\n    if (match && !this._matchedElement) {\n      this._matchedElement = match;\n      this._options.enter?.call(this._host, {\n        event,\n        state: this._stateParameters,\n      });\n      return;\n    }\n\n    if (!match && this._matchedElement) {\n      this._options.leave?.call(this._host, {\n        event,\n        state: this._stateParameters,\n      });\n      this._matchedElement = null;\n      return;\n    }\n\n    if (match && match === this._matchedElement) {\n      this._options.over?.call(this._host, {\n        event,\n        state: this._stateParameters,\n      });\n    }\n  }\n\n  private _updatePosition({ clientX, clientY }: PointerEvent): void {\n    const { x, y } = this._state.offset;\n    const { x: layerX, y: layerY } = this._isDeferred\n      ? this._layer.getBoundingClientRect()\n      : this._state.initial;\n\n    const posX = this._hasSnapping ? clientX - layerX : clientX - layerX + x;\n    const posY = this._hasSnapping ? clientY - layerY : clientY - layerY + y;\n\n    this._state.position = { x: posX, y: posY };\n  }\n\n  private _updatePointerState({ clientX, clientY }: PointerEvent): void {\n    const state = this._state.pointerState;\n\n    state.previous = { ...state.current };\n    state.current = { x: clientX, y: clientY };\n\n    const dx = state.current.x - state.previous.x;\n    const dy = state.current.y - state.previous.y;\n\n    if (Math.abs(dx) >= Math.abs(dy)) {\n      const swapHorizontal = isLTR(this._host) ? dx >= 0 : dx <= 0;\n      state.direction = swapHorizontal ? 'end' : 'start';\n    } else {\n      state.direction = dy >= 0 ? 'bottom' : 'top';\n    }\n  }\n\n  private _assignPosition(element: HTMLElement): void {\n    element.style.transform = `translate3d(${roundByDPR(this._state.position.x)}px,${roundByDPR(this._state.position.y)}px,0)`;\n  }\n\n  private _createDragGhost(): void {\n    if (!this._isDeferred) {\n      return;\n    }\n\n    this._ghost =\n      this._options.ghost?.call(this._host) ??\n      createDefaultDragGhost(this._host.getBoundingClientRect());\n\n    this._layer.append(this._ghost);\n  }\n\n  private _removeGhost(): void {\n    this._ghost?.remove();\n    this._ghost = null;\n  }\n\n  private _shouldSkip(event: PointerEvent): boolean {\n    return (\n      Boolean(event.button) ||\n      this._options.skip?.call(this._host, event) ||\n      !findElementFromEventPath((e) => e === this._element, event)\n    );\n  }\n}\n\nfunction createDefaultDragGhost({ x, y, width, height }: DOMRect): HTMLElement {\n  const element = document.createElement('div');\n\n  Object.assign(element.style, {\n    position: 'absolute',\n    left: `${x}px`,\n    top: `${y}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    zIndex: 1000,\n    background: 'gold',\n  });\n\n  return element;\n}\n\n/**\n * Adds a drag and drop controller to the given host\n */\nexport function addDragController(\n  host: ReactiveControllerHost & LitElement,\n  options?: DragControllerConfiguration\n): DragController {\n  return new DragController(host, options);\n}\n"]}