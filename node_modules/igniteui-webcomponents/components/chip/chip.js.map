{"version":3,"file":"chip.js","sourceRoot":"","sources":["../../../src/components/chip/chip.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, nothing } from 'lit';\nimport { property, queryAssignedElements } from 'lit/decorators.js';\nimport { createRef, type Ref, ref } from 'lit/directives/ref.js';\n\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport { addKeybindings } from '../common/controllers/key-bindings.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { isEmpty } from '../common/util.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport type { StyleVariant } from '../types.js';\nimport { styles } from './themes/chip.base.css.js';\nimport { styles as shared } from './themes/shared/chip.common.css.js';\nimport { all } from './themes/themes.js';\n\nexport interface IgcChipComponentEventMap {\n  igcRemove: CustomEvent<boolean>;\n  igcSelect: CustomEvent<boolean>;\n}\n/**\n * Chips help people enter information, make selections, filter content, or trigger actions.\n *\n * @element igc-chip\n *\n * @slot - Renders the chip data.\n * @slot prefix - Renders content before the data of the chip.\n * @slot suffix - Renders content after the data of the chip.\n *\n * @fires igcRemove - Emits an event when the chip component is removed. Returns the removed chip component.\n * @fires igcSelect - Emits event when the chip component is selected/deselected and any related animations and transitions also end.\n *\n * @csspart base - The base wrapper of the chip.\n * @csspart prefix - The prefix container of the chip.\n * @csspart suffix - The suffix container of the chip.\n */\nexport default class IgcChipComponent extends EventEmitterMixin<\n  IgcChipComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-chip';\n  public static styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register() {\n    registerComponent(IgcChipComponent, IgcIconComponent);\n  }\n\n  private _removePartRef: Ref<HTMLSlotElement> = createRef();\n\n  /**\n   * Sets the disabled state for the chip.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Defines if the chip is removable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public removable = false;\n\n  /**\n   * Defines if the chip is selectable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public selectable = false;\n\n  /* @tsTwoWayProperty(true, \"igcSelect\", \"detail\", false) */\n  /**\n   * Defines if the chip is selected or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public selected = false;\n\n  /**\n   * A property that sets the color variant of the chip component.\n   * @attr\n   */\n  @property({ reflect: true })\n  public variant!: StyleVariant;\n\n  @queryAssignedElements({ slot: 'prefix' })\n  protected prefixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'start' })\n  protected contentStart!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'suffix' })\n  protected suffixes!: Array<HTMLElement>;\n\n  @queryAssignedElements({ slot: 'end' })\n  protected contentEnd!: Array<HTMLElement>;\n\n  constructor() {\n    super();\n\n    addThemingController(this, all);\n\n    addKeybindings(this, {\n      ref: this._removePartRef,\n      bindingDefaults: { triggers: ['keyup'] },\n    }).setActivateHandler(this.handleRemove);\n  }\n\n  protected override createRenderRoot() {\n    const root = super.createRenderRoot();\n    root.addEventListener('slotchange', () => this.requestUpdate());\n    return root;\n  }\n\n  protected handleSelect() {\n    if (this.selectable) {\n      this.selected = !this.selected;\n      this.emitEvent('igcSelect', { detail: this.selected });\n    }\n  }\n\n  protected handleRemove(e: Event) {\n    this.emitEvent('igcRemove');\n    e.stopPropagation();\n  }\n\n  protected override render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=${this.disabled}\n        aria-selected=${this.selected}\n        aria-disabled=${this.disabled}\n        @click=${this.handleSelect}\n      >\n        <span\n          part=\"prefix\"\n          .hidden=${isEmpty(this.prefixes) &&\n          isEmpty(this.contentStart) &&\n          !this.selected}\n        >\n          ${this.selectable && this.selected\n            ? html`<slot name=\"select\">\n                <igc-icon name=\"selected\" collection=\"default\"></igc-icon>\n              </slot>`\n            : nothing}\n          <slot name=\"start\"></slot>\n          <slot name=\"prefix\"></slot>\n        </span>\n        <slot></slot>\n        <span\n          part=\"suffix\"\n          .hidden=${isEmpty(this.suffixes) &&\n          isEmpty(this.contentEnd) &&\n          !this.removable}\n        >\n          <slot name=\"end\"></slot>\n          <slot name=\"suffix\"></slot>\n          ${this.removable && !this.disabled\n            ? html`<slot\n                ${ref(this._removePartRef)}\n                @click=${this.handleRemove}\n                name=\"remove\"\n              >\n                <igc-icon\n                  name=\"remove\"\n                  collection=\"default\"\n                  tabindex=\"0\"\n                  role=\"button\"\n                  aria-label=\"remove\"\n                ></igc-icon>\n              </slot>`\n            : nothing}\n        </span>\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-chip': IgcChipComponent;\n  }\n}\n"]}