import { type TemplateResult } from 'lit';
import { IgcCheckboxBaseComponent } from './checkbox-base.js';
/**
 * A check box allowing single values to be selected/deselected.
 *
 * @element igc-checkbox
 *
 * @slot - The checkbox label.
 * @slot helper-text - Renders content below the input.
 * @slot value-missing - Renders content when the required validation fails.
 * @slot custom-error - Renders content when setCustomValidity(message) is set.
 * @slot invalid - Renders content when the component is in invalid state (validity.valid = false).
 *
 * @fires igcChange - Emitted when the control's checked state changes.
 *
 * @csspart base - The base wrapper of the checkbox.
 * @csspart control - The checkbox input element.
 * @csspart label - The checkbox label.
 * @csspart indicator - The checkbox indicator icon.
 */
export default class IgcCheckboxComponent extends IgcCheckboxBaseComponent {
    static readonly tagName = "igc-checkbox";
    protected static styles: import("lit").CSSResult[];
    static register(): void;
    private static readonly increment;
    private readonly _themes;
    private readonly _inputId;
    private readonly _labelId;
    /**
     * Draws the checkbox in indeterminate state.
     * @attr
     */
    indeterminate: boolean;
    protected _handleClick(event: PointerEvent): void;
    protected renderValidatorContainer(): TemplateResult;
    protected renderStandard(): TemplateResult<1>;
    protected renderIndigo(): TemplateResult<1>;
    protected render(): TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-checkbox': IgcCheckboxComponent;
    }
}
