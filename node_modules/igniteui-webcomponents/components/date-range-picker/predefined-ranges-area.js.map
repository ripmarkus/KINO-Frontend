{"version":3,"file":"predefined-ranges-area.js","sourceRoot":"","sources":["../../../src/components/date-range-picker/predefined-ranges-area.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport { CalendarDay } from '../calendar/model.js';\nimport IgcChipComponent from '../chip/chip.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport {\n  type IgcDateRangePickerResourceStrings,\n  IgcDateRangePickerResourceStringsEN,\n} from '../common/i18n/date-range-picker.resources.js';\nimport type { CustomDateRange, DateRangeValue } from './date-range-picker.js';\nimport { styles } from './predefined-ranges-area.base.css.js';\nimport { all } from './themes/ranges-themes.js';\nimport { styles as shared } from './themes/shared/predefined-ranges-area.common.css.js';\n\n/* blazorSuppress */\n/**\n * The predefined ranges area component is used within the `igc-date-range picker` element and it\n * displays a set of chips with predefined date ranges. The component allows users to quickly select\n * a predefined date range value. Users can also provide custom ranges to be displayed as chips.\n *\n * @element igc-predefined-ranges-area\n */\nexport default class IgcPredefinedRangesAreaComponent extends LitElement {\n  public static readonly tagName = 'igc-predefined-ranges-area';\n  public static override styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register(): void {\n    registerComponent(IgcPredefinedRangesAreaComponent, IgcChipComponent);\n  }\n\n  @state()\n  private _predefinedRanges: CustomDateRange[] = [];\n\n  /**\n   * Whether the control will show chips with predefined ranges.\n   * @attr use-predefined-ranges\n   */\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'use-predefined-ranges',\n  })\n  public usePredefinedRanges = false;\n\n  /**\n   * Renders chips with custom ranges based on the elements of the array.\n   */\n  @property({ attribute: false })\n  public customRanges: CustomDateRange[] = [];\n\n  /** The resource strings of the date range area component. */\n  @property({ attribute: false })\n  public resourceStrings: IgcDateRangePickerResourceStrings =\n    IgcDateRangePickerResourceStringsEN;\n\n  constructor() {\n    super();\n    addThemingController(this, all);\n  }\n\n  @watch('resourceStrings')\n  protected _updatePredefinedRanges(): void {\n    this._predefinedRanges = getPredefinedRanges(this.resourceStrings);\n  }\n\n  private _handleRangeSelect(range: DateRangeValue): void {\n    this.dispatchEvent(new CustomEvent('igcRangeSelect', { detail: range }));\n  }\n\n  protected *_renderDateRanges() {\n    const ranges = this.usePredefinedRanges\n      ? [...this._predefinedRanges, ...this.customRanges]\n      : this.customRanges;\n\n    for (const { label, dateRange } of ranges) {\n      yield html`\n        <igc-chip @click=${() => this._handleRangeSelect(dateRange)}>\n          ${label}\n        </igc-chip>\n      `;\n    }\n  }\n\n  protected override render() {\n    return html`<div part=\"ranges\">${this._renderDateRanges()}</div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-predefined-ranges-area': IgcPredefinedRangesAreaComponent;\n  }\n}\n\ntype PredefinedRangeKey =\n  | 'last7Days'\n  | 'currentMonth'\n  | 'last30Days'\n  | 'yearToDate';\n\nfunction getPredefinedRanges(\n  resourceStrings: IgcDateRangePickerResourceStrings\n): CustomDateRange[] {\n  const today = CalendarDay.today;\n\n  const ranges: {\n    key: PredefinedRangeKey;\n    getDateRange: () => { start: Date; end: Date };\n  }[] = [\n    {\n      key: 'last7Days',\n      getDateRange: () => ({\n        start: today.add('day', -7).native,\n        end: today.native,\n      }),\n    },\n    {\n      key: 'currentMonth',\n      getDateRange: () => ({\n        start: today.set({ date: 1 }).native,\n        end: today.set({ date: 1 }).add('month', 1).add('day', -1).native,\n      }),\n    },\n    {\n      key: 'last30Days',\n      getDateRange: () => ({\n        start: today.add('day', -29).native,\n        end: today.native,\n      }),\n    },\n    {\n      key: 'yearToDate',\n      getDateRange: () => ({\n        start: today.set({ year: today.year, month: 0, date: 1 }).native,\n        end: today.native,\n      }),\n    },\n  ];\n\n  return ranges.map((range) => ({\n    label:\n      resourceStrings[range.key] ||\n      IgcDateRangePickerResourceStringsEN[range.key],\n    dateRange: range.getDateRange(),\n  }));\n}\n"]}