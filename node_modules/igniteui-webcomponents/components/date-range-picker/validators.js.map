{"version":3,"file":"validators.js","sourceRoot":"","sources":["../../../src/components/date-range-picker/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { calendarRange, isDateInRanges } from '../calendar/helpers.js';\nimport { CalendarDay } from '../calendar/model.js';\nimport type { DateRangeDescriptor } from '../calendar/types.js';\nimport messages from '../common/localization/validation-en.js';\nimport { formatString, isEmpty } from '../common/util.js';\nimport type { Validator } from '../common/validators.js';\nimport type IgcDateRangePickerComponent from './date-range-picker.js';\nimport type { DateRangeValue } from './date-range-picker.js';\n\nexport const minDateRangeValidator: Validator<{\n  value?: DateRangeValue | null;\n  min?: Date | null;\n}> = {\n  key: 'rangeUnderflow',\n  message: ({ min }) => formatString(messages.min, min),\n  isValid: ({ value, min }) => {\n    if (!min) {\n      return true;\n    }\n\n    const isStartInvalid =\n      value?.start && CalendarDay.compare(value.start, min) < 0;\n    const isEndInvalid = value?.end && CalendarDay.compare(value.end, min) < 0;\n\n    return !(isStartInvalid || isEndInvalid);\n  },\n};\n\nexport const maxDateRangeValidator: Validator<{\n  value?: DateRangeValue | null;\n  max?: Date | null;\n}> = {\n  key: 'rangeOverflow',\n  message: ({ max }) => formatString(messages.max, max),\n  isValid: ({ value, max }) => {\n    if (!max) {\n      return true;\n    }\n\n    const isStartInvalid =\n      value?.start && CalendarDay.compare(value.start, max) > 0;\n    const isEndInvalid = value?.end && CalendarDay.compare(value.end, max) > 0;\n\n    return !(isStartInvalid || isEndInvalid);\n  },\n};\n\nexport const requiredDateRangeValidator: Validator<{\n  required: boolean;\n  value: DateRangeValue | null;\n}> = {\n  key: 'valueMissing',\n  message: messages.required,\n  isValid: ({ required, value }) => {\n    return required ? isCompleteDateRange(value) : true;\n  },\n};\n\nexport const badInputDateRangeValidator: Validator<{\n  required: boolean;\n  value: DateRangeValue | null;\n  disabledDates?: DateRangeDescriptor[];\n}> = {\n  key: 'badInput',\n  message: ({ value }) => formatString(messages.disabledDate, value),\n  isValid: ({ value, disabledDates }) => {\n    if (\n      !isCompleteDateRange(value) ||\n      !disabledDates ||\n      isEmpty(disabledDates)\n    ) {\n      return true;\n    }\n\n    return Array.from(\n      calendarRange({ start: value.start, end: value.end, inclusive: true })\n    ).every((date) => !isDateInRanges(date, disabledDates));\n  },\n};\n\nexport const dateRangeValidators: Validator<IgcDateRangePickerComponent>[] = [\n  requiredDateRangeValidator,\n  minDateRangeValidator,\n  maxDateRangeValidator,\n  badInputDateRangeValidator,\n];\n\nexport function isCompleteDateRange(\n  value: DateRangeValue | null\n): value is { start: Date; end: Date } {\n  return value != null && value.start != null && value.end != null;\n}\n"]}