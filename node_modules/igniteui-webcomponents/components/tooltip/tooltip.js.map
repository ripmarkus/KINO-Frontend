{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../src/components/tooltip/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, nothing, type PropertyValues } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { EaseOut } from '../../animations/easings.js';\nimport { addAnimationController } from '../../animations/player.js';\nimport { fadeOut } from '../../animations/presets/fade/index.js';\nimport { scaleInCenter } from '../../animations/presets/scale/index.js';\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport { addInternalsController } from '../common/controllers/internals.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { asNumber, isLTR } from '../common/util.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport IgcPopoverComponent, {\n  type PopoverPlacement,\n} from '../popover/popover.js';\nimport { addTooltipController, TooltipRegexes } from './controller.js';\nimport { styles as shared } from './themes/shared/tooltip.common.css.js';\nimport { all } from './themes/themes.js';\nimport { styles } from './themes/tooltip.base.css.js';\n\nexport interface IgcTooltipComponentEventMap {\n  igcOpening: CustomEvent<void>;\n  igcOpened: CustomEvent<void>;\n  igcClosing: CustomEvent<void>;\n  igcClosed: CustomEvent<void>;\n}\n\ntype TooltipStateOptions = {\n  show: boolean;\n  withDelay?: boolean;\n  withEvents?: boolean;\n};\n\n/**\n * Provides a way to display supplementary information related to an element when a user interacts with it (e.g., hover, focus).\n * It offers features such as placement customization, delays, sticky mode, and animations.\n *\n * @element igc-tooltip\n *\n * @slot - Default slot of the tooltip component.\n * @slot close-button - Slot for custom sticky-mode close action (e.g., an icon/button).\n *\n * @csspart base - The wrapping container of the tooltip content.\n *\n * @fires igcOpening - Emitted before the tooltip begins to open. Can be canceled to prevent opening.\n * @fires igcOpened - Emitted after the tooltip has successfully opened and is visible.\n * @fires igcClosing - Emitted before the tooltip begins to close. Can be canceled to prevent closing.\n * @fires igcClosed - Emitted after the tooltip has been fully removed from view.\n */\nexport default class IgcTooltipComponent extends EventEmitterMixin<\n  IgcTooltipComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-tooltip';\n  public static styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register(): void {\n    registerComponent(\n      IgcTooltipComponent,\n      IgcPopoverComponent,\n      IgcIconComponent\n    );\n  }\n\n  private readonly _internals = addInternalsController(this, {\n    initialARIA: {\n      role: 'tooltip',\n      ariaAtomic: 'true',\n      ariaLive: 'polite',\n    },\n  });\n\n  private readonly _controller = addTooltipController(this, {\n    onShow: this._showOnInteraction,\n    onHide: this._hideOnInteraction,\n    onEscape: this._hideOnEscape,\n  });\n\n  private readonly _containerRef = createRef<HTMLElement>();\n  private readonly _player = addAnimationController(this, this._containerRef);\n\n  private readonly _showAnimation = scaleInCenter({\n    duration: 150,\n    easing: EaseOut.Quad,\n  });\n\n  private readonly _hideAnimation = fadeOut({\n    duration: 75,\n    easing: EaseOut.Sine,\n  });\n\n  private _timeoutId?: number;\n  private _autoHideDelay = 180;\n  private _showDelay = 200;\n  private _hideDelay = 300;\n\n  @query('#arrow')\n  private _arrowElement!: HTMLElement;\n\n  private get _arrowOffset() {\n    if (this.placement.includes('-')) {\n      // Horizontal start | end placement\n\n      if (TooltipRegexes.horizontalStart.test(this.placement)) {\n        return -8;\n      }\n\n      if (TooltipRegexes.horizontalEnd.test(this.placement)) {\n        return 8;\n      }\n\n      // Vertical start | end placement\n\n      if (TooltipRegexes.start.test(this.placement)) {\n        return isLTR(this) ? -8 : 8;\n      }\n\n      if (TooltipRegexes.end.test(this.placement)) {\n        return isLTR(this) ? 8 : -8;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Whether the tooltip is showing.\n   *\n   * @attr open\n   * @default false\n   */\n  @property({ type: Boolean, reflect: true })\n  public set open(value: boolean) {\n    this._controller.open = value;\n  }\n\n  public get open(): boolean {\n    return this._controller.open;\n  }\n\n  /**\n   * Whether to disable the rendering of the arrow indicator for the tooltip.\n   *\n   * @deprecated since 6.1.0. Use `with-arrow` to control the behavior of the tooltip arrow.\n   * @attr disable-arrow\n   * @default false\n   */\n  @property({ type: Boolean, attribute: 'disable-arrow' })\n  public set disableArrow(value: boolean) {\n    this.withArrow = !value;\n  }\n\n  /**\n   * @deprecated since 6.1.0. Use `with-arrow` to control the behavior of the tooltip arrow.\n   */\n  public get disableArrow(): boolean {\n    return !this.withArrow;\n  }\n\n  /**\n   * Whether to render an arrow indicator for the tooltip.\n   *\n   * @attr with-arrow\n   * @default false\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'with-arrow' })\n  public withArrow = false;\n\n  /**\n   * The offset of the tooltip from the anchor in pixels.\n   *\n   * @attr offset\n   * @default 6\n   */\n  @property({ type: Number })\n  public offset = 6;\n\n  /**\n   * Where to place the floating element relative to the parent anchor element.\n   *\n   * @attr placement\n   * @default bottom\n   */\n  @property()\n  public placement: PopoverPlacement = 'bottom';\n\n  /**\n   * An element instance or an IDREF to use as the anchor for the tooltip.\n   *\n   * @remarks\n   * Trying to bind to an IDREF that does not exist in the current DOM root at will not work.\n   * In such scenarios, it is better to get a DOM reference and pass it to the tooltip instance.\n   *\n   * @attr anchor\n   */\n  @property()\n  public anchor?: Element | string;\n\n  /**\n   * Which event triggers will show the tooltip.\n   * Expects a comma separate string of different event triggers.\n   *\n   * @attr show-triggers\n   * @default pointerenter\n   */\n  @property({ attribute: 'show-triggers' })\n  public set showTriggers(value: string) {\n    this._controller.showTriggers = value;\n  }\n\n  public get showTriggers(): string {\n    return this._controller.showTriggers;\n  }\n\n  /**\n   * Which event triggers will hide the tooltip.\n   * Expects a comma separate string of different event triggers.\n   *\n   * @attr hide-triggers\n   * @default pointerleave, click\n   */\n  @property({ attribute: 'hide-triggers' })\n  public set hideTriggers(value: string) {\n    this._controller.hideTriggers = value;\n  }\n\n  public get hideTriggers(): string {\n    return this._controller.hideTriggers;\n  }\n\n  /**\n   * Specifies the number of milliseconds that should pass before showing the tooltip.\n   *\n   * @attr show-delay\n   * @default 200\n   */\n  @property({ attribute: 'show-delay', type: Number })\n  public set showDelay(value: number) {\n    this._showDelay = Math.max(0, asNumber(value));\n  }\n\n  public get showDelay(): number {\n    return this._showDelay;\n  }\n\n  /**\n   * Specifies the number of milliseconds that should pass before hiding the tooltip.\n   *\n   * @attr hide-delay\n   * @default 300\n   */\n  @property({ attribute: 'hide-delay', type: Number })\n  public set hideDelay(value: number) {\n    this._hideDelay = Math.max(0, asNumber(value));\n  }\n\n  public get hideDelay(): number {\n    return this._hideDelay;\n  }\n\n  /**\n   * Specifies a plain text as tooltip content.\n   *\n   * @attr message\n   */\n  @property()\n  public message = '';\n\n  /**\n   * Specifies if the tooltip remains visible until the user closes it via the close button or Esc key.\n   *\n   * @attr sticky\n   * @default false\n   */\n  @property({ type: Boolean, reflect: true })\n  public sticky = false;\n\n  constructor() {\n    super();\n    addThemingController(this, all);\n  }\n\n  protected override firstUpdated(): void {\n    if (this.open) {\n      this.updateComplete.then(() => {\n        this._player.playExclusive(this._showAnimation);\n        this.requestUpdate();\n      });\n    }\n  }\n\n  protected override willUpdate(changedProperties: PropertyValues<this>): void {\n    if (changedProperties.has('anchor')) {\n      this._controller.resolveAnchor(this.anchor);\n    }\n\n    if (changedProperties.has('sticky')) {\n      this._internals.setARIA({ role: this.sticky ? 'status' : 'tooltip' });\n    }\n  }\n\n  private _emitEvent(name: keyof IgcTooltipComponentEventMap): boolean {\n    return this.emitEvent(name, {\n      cancelable: name === 'igcOpening' || name === 'igcClosing',\n    });\n  }\n\n  private async _applyTooltipState({\n    show,\n    withDelay = false,\n    withEvents = false,\n  }: TooltipStateOptions): Promise<boolean> {\n    if (show === this.open) {\n      return false;\n    }\n\n    if (withEvents && !this._emitEvent(show ? 'igcOpening' : 'igcClosing')) {\n      return false;\n    }\n\n    const commitStateChange = async () => {\n      if (show) {\n        this.open = true;\n      }\n\n      // Make the tooltip ignore most interactions while the animation\n      // is running. In the rare case when the popover overlaps its anchor\n      // this will prevent looping between the anchor and tooltip handlers.\n      this.inert = true;\n\n      const animationComplete = await this._player.playExclusive(\n        show ? this._showAnimation : this._hideAnimation\n      );\n\n      this.inert = false;\n      this.open = show;\n\n      if (animationComplete && withEvents) {\n        this._emitEvent(show ? 'igcOpened' : 'igcClosed');\n      }\n\n      return animationComplete;\n    };\n\n    if (withDelay) {\n      clearTimeout(this._timeoutId);\n\n      return new Promise(() => {\n        this._timeoutId = setTimeout(\n          async () => await commitStateChange(),\n          show ? this.showDelay : this.hideDelay\n        );\n      });\n    }\n\n    return commitStateChange();\n  }\n\n  /**\n   *  Shows the tooltip if not already showing.\n   *  If a target is provided, sets it as a transient anchor.\n   */\n  public async show(target?: Element | string): Promise<boolean> {\n    if (target) {\n      this._stopTimeoutAndAnimation();\n      this._controller.setAnchor(target, true);\n    }\n\n    return await this._applyTooltipState({ show: true });\n  }\n\n  /** Hides the tooltip if not already hidden. */\n  public async hide(): Promise<boolean> {\n    return await this._applyTooltipState({ show: false });\n  }\n\n  /** Toggles the tooltip between shown/hidden state */\n  public async toggle(): Promise<boolean> {\n    return await (this.open ? this.hide() : this.show());\n  }\n\n  protected _showWithEvent(): Promise<boolean> {\n    return this._applyTooltipState({\n      show: true,\n      withDelay: true,\n      withEvents: true,\n    });\n  }\n\n  protected _hideWithEvent(): Promise<boolean> {\n    return this._applyTooltipState({\n      show: false,\n      withDelay: true,\n      withEvents: true,\n    });\n  }\n\n  private _showOnInteraction(): void {\n    this._stopTimeoutAndAnimation();\n    this._showWithEvent();\n  }\n\n  private _stopTimeoutAndAnimation(): void {\n    clearTimeout(this._timeoutId);\n    this._player.stopAll();\n  }\n\n  private _setAutoHide(): void {\n    this._stopTimeoutAndAnimation();\n\n    this._timeoutId = setTimeout(\n      this._hideWithEvent.bind(this),\n      this._autoHideDelay\n    );\n  }\n\n  private _hideOnInteraction(): void {\n    if (!this.sticky) {\n      this._setAutoHide();\n    }\n  }\n\n  private async _hideOnEscape(): Promise<void> {\n    await this.hide();\n    this._emitEvent('igcClosed');\n  }\n\n  protected override render() {\n    return html`\n      <igc-popover\n        .inert=${!this.open}\n        .placement=${this.placement}\n        .offset=${this.offset}\n        .anchor=${this._controller.anchor ?? undefined}\n        .arrow=${this.withArrow ? this._arrowElement : null}\n        .arrowOffset=${this._arrowOffset}\n        .shiftPadding=${8}\n        ?open=${this.open}\n        flip\n        shift\n      >\n        <div ${ref(this._containerRef)} part=\"base\">\n          <slot>${this.message}</slot>\n          ${this.sticky\n            ? html`\n                <slot name=\"close-button\" @click=${this._setAutoHide}>\n                  <igc-icon\n                    name=\"input_clear\"\n                    collection=\"default\"\n                    aria-hidden=\"true\"\n                  ></igc-icon>\n                </slot>\n              `\n            : nothing}\n          ${this.withArrow ? html`<div id=\"arrow\"></div>` : nothing}\n        </div>\n      </igc-popover>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-tooltip': IgcTooltipComponent;\n  }\n}\n"]}