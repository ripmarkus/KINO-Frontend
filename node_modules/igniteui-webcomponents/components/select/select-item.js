var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { property } from 'lit/decorators.js';
import { addThemingController } from '../../theming/theming-controller.js';
import { registerComponent } from '../common/definitions/register.js';
import { IgcBaseOptionLikeComponent } from '../common/mixins/option.js';
import { styles } from '../dropdown/themes/dropdown-item.base.css.js';
import { all } from '../dropdown/themes/item.js';
import { styles as shared } from '../dropdown/themes/shared/item/dropdown-item.common.css.js';
class IgcSelectItemComponent extends IgcBaseOptionLikeComponent {
    static register() {
        registerComponent(IgcSelectItemComponent);
    }
    set active(value) {
        this._active = Boolean(value);
        this.tabIndex = this._active ? 0 : -1;
    }
    get active() {
        return this._active;
    }
    constructor() {
        super();
        addThemingController(this, all);
    }
}
IgcSelectItemComponent.tagName = 'igc-select-item';
IgcSelectItemComponent.styles = [styles, shared];
export default IgcSelectItemComponent;
__decorate([
    property({ type: Boolean, reflect: true })
], IgcSelectItemComponent.prototype, "active", null);
//# sourceMappingURL=select-item.js.map