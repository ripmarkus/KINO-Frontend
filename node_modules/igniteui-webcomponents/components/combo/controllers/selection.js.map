{"version":3,"file":"selection.js","sourceRoot":"","sources":["../../../../src/components/combo/controllers/selection.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAWxD,MAAM,OAAO,mBAAmB;IAM9B,IAAW,OAAO;QAChB,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IAGD,IAAW,OAAO;QAChB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAGM,GAAG,CAAC,IAAQ;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAK,CAAC,CAAC;IACnC,CAAC;IAGM,KAAK;QACV,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAEM,sBAAsB,CAAC,GAAa;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAI,CAAC,IAAI,IAAI,CAAC,CAAC;IACxD,CAAC;IAEM,QAAQ,CAAC,KAAU,EAAE,GAAY;QACtC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC;IAChD,CAAC;IAEO,YAAY,CAAC,MAA+B;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IACxE,CAAC;IAEO,kBAAkB,CAAC,IAAiB;QAC1C,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,CAAC,CACrC,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,IAAiB;QACvC,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,IAAiB;QACzC,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAClB,OAAO;QACT,CAAC;QAED,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,KAAU;QAC9B,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAAU;QAChC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAA2B,EAAE,IAAI,GAAG,KAAK;QAC3D,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAE5C,IAAI,YAAY,EAAE,CAAC;YACjB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;gBAClB,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC;YACD,OAAO;QACT,CAAC;QAED,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC/B,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAqB,CAAC;YAChD,CAAC,CAAC,MAAM,CAAC;QACX,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,CAAC,GAAG,MAAM,EAAE,GAAG,QAAQ,CAAQ,CAAC;QAEhD,IACE,IAAI;YACJ,CAAC,IAAI,CAAC,YAAY,CAAC;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC;gBACrD,KAAK,EAAE,MAAa;gBACpB,IAAI,EAAE,WAAW;aAClB,CAAC,EACF,CAAC;YACD,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,MAAqB,CAAC,CAAC;QAC9C,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,MAAa,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,KAA2B,EAAE,IAAI,GAAG,KAAK;QAC7D,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAE5B,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;YACpB,IACE,IAAI;gBACJ,CAAC,IAAI,CAAC,YAAY,CAAC;oBACjB,QAAQ,EAAE,EAAE;oBACZ,KAAK,EAAE,IAAI,CAAC,OAAO;oBACnB,IAAI,EAAE,aAAa;iBACpB,CAAC,EACF,CAAC;gBACD,OAAO;YACT,CAAC;YAED,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YAC3B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC/B,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAqB,CAAC;YAChD,CAAC,CAAC,MAAM,CAAC;QACX,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,IACE,IAAI;YACJ,CAAC,IAAI,CAAC,YAAY,CAAC;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC;gBACrD,KAAK,EAAE,MAAa;gBACpB,IAAI,EAAE,aAAa;aACpB,CAAC,EACF,CAAC;YACD,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,iBAAiB,CAAC,MAAqB,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,eAAe,CAAC,MAAa,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEM,eAAe,CAAC,KAAa;QAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAElD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAEM,aAAa,CAAC,KAAa;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,YACY,IAAkB,EAClB,KAAwB;QADxB,SAAI,GAAJ,IAAI,CAAc;QAClB,UAAK,GAAL,KAAK,CAAmB;QAnN5B,cAAS,GAAW,IAAI,GAAG,EAAE,CAAC;QAqNpC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEM,aAAa,KAAI,CAAC;IAElB,gBAAgB,KAAI,CAAC;CAC7B","sourcesContent":["import type { ReactiveController } from 'lit';\n\nimport { asArray, isEmpty } from '../../common/util.js';\nimport type {\n  ComboHost,\n  ComboValue,\n  IgcComboChangeEventArgs,\n  Item,\n  Keys,\n  Values,\n} from '../types.js';\nimport type { DataController } from './data.js';\n\nexport class SelectionController<T extends object>\n  implements ReactiveController\n{\n  private _selected: Set<T> = new Set();\n\n  /** Whether the current selection is empty */\n  public get isEmpty() {\n    return isEmpty(this._selected);\n  }\n\n  /** Returns the current selection as an array */\n  public get asArray() {\n    return Array.from(this._selected);\n  }\n\n  /** Whether the current selection has the given item */\n  public has(item?: T) {\n    return this._selected.has(item!);\n  }\n\n  /** Clears the current selection */\n  public clear() {\n    this._selected.clear();\n  }\n\n  public getSelectedValuesByKey(key?: Keys<T>) {\n    return this.asArray.map((item) => item[key!] ?? item);\n  }\n\n  public getValue(items: T[], key: Keys<T>): ComboValue<T>[] {\n    return items.map((item) => item[key] ?? item);\n  }\n\n  private handleChange(detail: IgcComboChangeEventArgs) {\n    return this.host.emitEvent('igcChange', { cancelable: true, detail });\n  }\n\n  private getItemsByValueKey(keys: Values<T>[]) {\n    const _keys = new Set(keys);\n    return this.host.data.filter((item) =>\n      _keys.has(item[this.host.valueKey!])\n    );\n  }\n\n  private selectValueKeys(keys: Values<T>[]) {\n    if (isEmpty(keys)) {\n      return;\n    }\n\n    for (const item of this.getItemsByValueKey(keys)) {\n      this._selected.add(item);\n    }\n  }\n\n  private deselectValueKeys(keys: Values<T>[]) {\n    if (isEmpty(keys)) {\n      return;\n    }\n\n    for (const item of this.getItemsByValueKey(keys)) {\n      this._selected.delete(item);\n    }\n  }\n\n  private selectObjects(items: T[]) {\n    if (isEmpty(items)) {\n      return;\n    }\n\n    const dataSet = new Set(this.host.data);\n\n    for (const item of items) {\n      if (dataSet.has(item)) {\n        this._selected.add(item);\n      }\n    }\n  }\n\n  private deselectObjects(items: T[]) {\n    if (isEmpty(items)) {\n      return;\n    }\n\n    const dataSet = new Set(this.host.data);\n\n    for (const item of items) {\n      if (dataSet.has(item)) {\n        this._selected.delete(item);\n      }\n    }\n  }\n\n  private selectAll() {\n    this._selected = new Set(this.host.data);\n    this.host.requestUpdate();\n  }\n\n  private deselectAll() {\n    this.clear();\n    this.host.requestUpdate();\n  }\n\n  public async select(items?: Item<T> | Item<T>[], emit = false) {\n    let _items = asArray(items);\n    const singleSelect = this.host.singleSelect;\n\n    if (singleSelect) {\n      this.clear();\n      this.state.searchTerm = '';\n    }\n\n    if (isEmpty(_items)) {\n      if (!singleSelect) {\n        this.selectAll();\n      }\n      return;\n    }\n\n    if (singleSelect) {\n      _items = _items.slice(0, 1);\n    }\n\n    const values = this.host.valueKey\n      ? this.getItemsByValueKey(_items as Values<T>[])\n      : _items;\n    const selected = Array.from(this._selected.values());\n    const payload = [...values, ...selected] as T[];\n\n    if (\n      emit &&\n      !this.handleChange({\n        newValue: this.getValue(payload, this.host.valueKey!),\n        items: values as T[],\n        type: 'selection',\n      })\n    ) {\n      return;\n    }\n\n    if (this.host.valueKey) {\n      this.selectValueKeys(_items as Values<T>[]);\n    } else {\n      this.selectObjects(_items as T[]);\n    }\n\n    this.host.requestUpdate();\n  }\n\n  public async deselect(items?: Item<T> | Item<T>[], emit = false) {\n    let _items = asArray(items);\n\n    if (isEmpty(_items)) {\n      if (\n        emit &&\n        !this.handleChange({\n          newValue: [],\n          items: this.asArray,\n          type: 'deselection',\n        })\n      ) {\n        return;\n      }\n\n      this.deselectAll();\n      return;\n    }\n\n    if (this.host.singleSelect) {\n      _items = _items.slice(0, 1);\n    }\n\n    const values = this.host.valueKey\n      ? this.getItemsByValueKey(_items as Values<T>[])\n      : _items;\n    const selected = Array.from(this._selected.values());\n    const payload = selected.filter((item) => item !== values[0]);\n\n    if (\n      emit &&\n      !this.handleChange({\n        newValue: this.getValue(payload, this.host.valueKey!),\n        items: values as T[],\n        type: 'deselection',\n      })\n    ) {\n      return;\n    }\n\n    if (this.host.valueKey) {\n      this.deselectValueKeys(_items as Values<T>[]);\n    } else {\n      this.deselectObjects(_items as T[]);\n    }\n\n    this.host.requestUpdate();\n  }\n\n  public changeSelection(index: number) {\n    const valueKey = this.host.valueKey;\n    const record = this.host.data[index];\n    const item = valueKey ? record[valueKey] : record;\n\n    this.has(record) ? this.deselect(item, true) : this.select(item, true);\n  }\n\n  public selectByIndex(index: number) {\n    const valueKey = this.host.valueKey;\n    const item = this.host.data[index];\n\n    this.select(valueKey ? item[valueKey] : item, true);\n  }\n\n  constructor(\n    protected host: ComboHost<T>,\n    protected state: DataController<T>\n  ) {\n    this.host.addController(this);\n  }\n\n  public hostConnected() {}\n\n  public hostDisconnected() {}\n}\n"]}