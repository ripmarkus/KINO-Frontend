{"version":3,"file":"icon.js","sourceRoot":"","sources":["../../../src/components/icon/icon.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\n\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport type { Theme } from '../../theming/types.js';\nimport { addInternalsController } from '../common/controllers/internals.js';\nimport { blazorInclude } from '../common/decorators/blazorInclude.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport {\n  getIconRegistry,\n  registerIcon as registerIcon_impl,\n  registerIconFromText as registerIconFromText_impl,\n  setIconRef as setIconRef_impl,\n} from './icon.registry.js';\nimport type { IconMeta } from './registry/types.js';\nimport { styles } from './themes/icon.base.css.js';\nimport { styles as shared } from './themes/shared/icon.common.css.js';\nimport { all } from './themes/themes.js';\n\n/**\n * The icon component allows visualizing collections of pre-registered SVG icons.\n *\n * @element igc-icon\n *\n *\n */\nexport default class IgcIconComponent extends LitElement {\n  public static readonly tagName = 'igc-icon';\n  public static override styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register(): void {\n    registerComponent(IgcIconComponent);\n  }\n\n  private readonly _internals = addInternalsController(this, {\n    initialARIA: { role: 'img' },\n  });\n\n  @state()\n  private svg = '';\n\n  /* alternateName: iconName */\n  /**\n   * The name of the icon glyph to draw.\n   * @attr\n   */\n  @property()\n  public name = '';\n\n  /**\n   * The name of the registered collection for look up of icons.\n   * Defaults to `default`.\n   * @attr\n   */\n  @property()\n  public collection = 'default';\n\n  /**\n   * Whether to flip the icon. Useful for RTL layouts.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public mirrored = false;\n\n  constructor() {\n    super();\n    addThemingController(this, all, {\n      themeChange: this._themeChangedCallback,\n    });\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    getIconRegistry().subscribe(this.iconLoaded);\n  }\n\n  public override disconnectedCallback() {\n    getIconRegistry().unsubscribe(this.iconLoaded);\n    super.disconnectedCallback();\n  }\n\n  @watch('name')\n  @watch('collection')\n  protected iconChanged(prev: string, curr: string) {\n    if (prev !== curr) {\n      this.getIcon();\n    }\n  }\n\n  private _themeChangedCallback(theme: Theme) {\n    getIconRegistry().setRefsByTheme(theme);\n  }\n\n  private iconLoaded = (name: string, collection: string) => {\n    if (this.name === name && this.collection === collection) {\n      this.getIcon();\n    }\n  };\n\n  private getIcon() {\n    const { name, collection } = getIconRegistry().getIconRef(\n      this.name,\n      this.collection\n    );\n    const { svg, title } = getIconRegistry().get(name, collection) ?? {};\n\n    this.svg = svg ?? '';\n    this._internals.setARIA({ ariaLabel: title ?? null });\n  }\n\n  protected override render() {\n    return html`${unsafeSVG(this.svg)}`;\n  }\n\n  /* c8 ignore next 8 */\n  @blazorInclude()\n  protected async registerIcon(\n    name: string,\n    url: string,\n    collection = 'default'\n  ) {\n    await registerIcon_impl(name, url, collection);\n  }\n\n  /* c8 ignore next 8 */\n  @blazorInclude()\n  protected registerIconFromText(\n    name: string,\n    iconText: string,\n    collection = 'default'\n  ) {\n    registerIconFromText_impl(name, iconText, collection);\n  }\n\n  /* c8 ignore next 4 */\n  @blazorInclude()\n  protected setIconRef(name: string, collection: string, icon: IconMeta) {\n    setIconRef_impl(name, collection, icon);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-icon': IgcIconComponent;\n  }\n}\n"]}