{"version":3,"file":"tab-dom.js","sourceRoot":"","sources":["../../../src/components/tabs/tab-dom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Ref } from 'lit/directives/ref.js';\nimport { isLTR } from '../common/util.js';\nimport type IgcTabComponent from './tab.js';\nimport type IgcTabsComponent from './tabs.js';\n\nclass TabsHelpers {\n  private static readonly SCROLL_AMOUNT = 180;\n  private readonly _host: IgcTabsComponent;\n  private readonly _container: Ref<HTMLElement>;\n  private readonly _indicator: Ref<HTMLElement>;\n\n  private _styleProperties = {\n    '--_tabs-count': '',\n    '--_ig-tabs-width': '',\n  };\n\n  private _hasScrollButtons = false;\n  private _scrollButtonsDisabled = { start: true, end: false };\n\n  private _isLeftToRight = false;\n\n  /**\n   * Returns the DOM container holding the tabs headers.\n   */\n  public get container(): HTMLElement | undefined {\n    return this._container.value;\n  }\n\n  /**\n   * Returns the selected indicator DOM element.\n   */\n  public get indicator(): HTMLElement | undefined {\n    return this._indicator.value;\n  }\n\n  /**\n   * Returns the internal CSS variables used for the layout of the tabs component.\n   */\n  public get styleProperties() {\n    return this._styleProperties;\n  }\n\n  /**\n   * Whether the scroll buttons of the tabs header strip should be shown.\n   */\n  public get hasScrollButtons(): boolean {\n    return this._hasScrollButtons;\n  }\n\n  /**\n   * Returns the disabled state of the tabs header strip scroll buttons.\n   */\n  public get scrollButtonsDisabled() {\n    return this._scrollButtonsDisabled;\n  }\n\n  public get isLeftToRightChanged(): boolean {\n    const isLeftToRight = isLTR(this._host);\n\n    if (this._isLeftToRight !== isLeftToRight) {\n      this._isLeftToRight = isLeftToRight;\n      return true;\n    }\n\n    return false;\n  }\n\n  constructor(\n    host: IgcTabsComponent,\n    container: Ref<HTMLElement>,\n    indicator: Ref<HTMLElement>\n  ) {\n    this._host = host;\n    this._container = container;\n    this._indicator = indicator;\n  }\n\n  /**\n   * Sets the internal CSS variables used for the layout of the tabs component.\n   * Triggers an update cycle (rerender) of the `igc-tabs` component.\n   */\n  public setStyleProperties(): void {\n    this._styleProperties = {\n      '--_tabs-count': this._host.tabs.length.toString(),\n      '--_ig-tabs-width': this.container\n        ? `${this.container.getBoundingClientRect().width}px`\n        : '',\n    };\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Sets the type of the `scroll-snap-align` CSS property for the tabs header strip.\n   */\n  public setScrollSnap(type?: 'start' | 'end'): void {\n    if (this.container) {\n      this.container.style.setProperty('--_ig-tab-snap', type || 'unset');\n    }\n  }\n\n  /**\n   * Scrolls the tabs header strip in the given direction with `scroll-snap-align` set.\n   */\n  public scrollTabs(direction: 'start' | 'end'): void {\n    if (!this.container) {\n      return;\n    }\n\n    const factor = isLTR(this._host) ? 1 : -1;\n    const amount =\n      direction === 'start'\n        ? -TabsHelpers.SCROLL_AMOUNT\n        : TabsHelpers.SCROLL_AMOUNT;\n\n    this.setScrollSnap(direction);\n    this.container.scrollBy({ left: factor * amount, behavior: 'smooth' });\n  }\n\n  /**\n   * Updates the state of the tabs header strip scroll buttons - visibility and active state.\n   * Triggers an update cycle (rerender) of the `igc-tabs` component.\n   */\n  public setScrollButtonState(): void {\n    if (!this.container) {\n      return;\n    }\n\n    const { scrollLeft, scrollWidth, clientWidth } = this.container;\n\n    this._hasScrollButtons = scrollWidth > clientWidth;\n    this._scrollButtonsDisabled = {\n      start: scrollLeft === 0,\n      end: Math.abs(Math.abs(scrollLeft) + clientWidth - scrollWidth) <= 1,\n    };\n\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Updates the indicator DOM element styles based on the current \"active\" tab.\n   */\n  public async setIndicator(active?: IgcTabComponent): Promise<void> {\n    if (!(this.container && this.indicator)) {\n      return;\n    }\n\n    const styles = {\n      visibility: active ? 'visible' : 'hidden',\n    } satisfies Partial<CSSStyleDeclaration>;\n\n    await this._host.updateComplete;\n\n    if (active) {\n      const tabHeader = getTabHeader(active);\n      const { width } = tabHeader.getBoundingClientRect();\n\n      const offset = this._isLeftToRight\n        ? tabHeader.offsetLeft - this.container.offsetLeft\n        : width +\n          tabHeader.offsetLeft -\n          this.container.getBoundingClientRect().width;\n\n      Object.assign(styles, {\n        width: `${width}px`,\n        transform: `translateX(${offset}px)`,\n      });\n    }\n\n    Object.assign(this.indicator.style, styles);\n  }\n}\n\nexport function createTabHelpers(\n  host: IgcTabsComponent,\n  container: Ref<HTMLElement>,\n  indicator: Ref<HTMLElement>\n) {\n  return new TabsHelpers(host, container, indicator);\n}\n\nexport function getTabHeader(tab: IgcTabComponent): HTMLElement {\n  return tab.renderRoot.querySelector('[part~=\"tab-header\"]')!;\n}\n"]}