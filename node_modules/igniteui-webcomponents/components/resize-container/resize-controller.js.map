{"version":3,"file":"resize-controller.js","sourceRoot":"","sources":["../../../src/components/resize-container/resize-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { createAbortHandle } from '../common/abort-handler.js';\nimport { findElementFromEventPath } from '../common/util.js';\nimport { createDefaultGhostElement, getDefaultLayer } from './default-ghost.js';\nimport type { ResizeControllerConfiguration, ResizeState } from './types.js';\n\nconst additionalEvents = [\n  'pointermove',\n  'lostpointercapture',\n  'contextmenu',\n] as const;\n\ntype State = {\n  initial: DOMRect;\n  current: DOMRect;\n};\n\nclass ResizeController implements ReactiveController {\n  private readonly _host: ReactiveControllerHost & HTMLElement;\n  private readonly _abortHandle = createAbortHandle();\n\n  private readonly _options: ResizeControllerConfiguration = {\n    enabled: true,\n    layer: getDefaultLayer,\n  };\n\n  private _id = -1;\n  private _hasPointerCapture = false;\n  private _state!: State;\n\n  private _activeRef: HTMLElement | null = null;\n  private _ghost: HTMLElement | null = null;\n\n  private get _element(): HTMLElement {\n    return this._activeRef ?? this._host;\n  }\n\n  private get _resizeTarget(): HTMLElement {\n    return this._options.resizeTarget?.call(this._host) ?? this._host;\n  }\n\n  private get _layer(): HTMLElement {\n    if (!this._isDeferred) {\n      return this._host;\n    }\n\n    return this._options.layer?.() ?? this._host;\n  }\n\n  /** Whether the controller is in deferred mode. */\n  private get _isDeferred(): boolean {\n    return this._options.mode === 'deferred';\n  }\n\n  private get _stateParameters(): ResizeState {\n    const { initial, current } = this._state;\n\n    return {\n      initial,\n      current,\n      deltaX: current.width - initial.width,\n      deltaY: current.height - initial.height,\n      ghost: this._ghost,\n      trigger: this._activeRef,\n    };\n  }\n\n  constructor(\n    host: ReactiveControllerHost & HTMLElement,\n    options?: ResizeControllerConfiguration\n  ) {\n    this._host = host;\n    this._host.addController(this);\n\n    this.set(options);\n  }\n\n  // #region Public API\n\n  /** Whether the controller is enabled and will listen for events. */\n  public get enabled(): boolean {\n    return Boolean(this._options.enabled);\n  }\n\n  /** Updates the configuration of the resize controller. */\n  public set(options?: ResizeControllerConfiguration): void {\n    Object.assign(this._options, options);\n  }\n\n  /** Stops any resizing operation, cleaning up any additional elements and event listeners. */\n  public dispose(): void {\n    this._setResizeState(false);\n    this._removeGhostElement();\n    this._activeRef = null;\n  }\n\n  /** @internal */\n  public hostConnected(): void {\n    const { signal } = this._abortHandle;\n    this._host.addEventListener('pointerdown', this, { signal });\n    this._host.addEventListener('touchstart', this, { passive: false, signal });\n  }\n\n  /** @internal */\n  public hostDisconnected(): void {\n    this._abortHandle.abort();\n    this._setResizeCancelListener(false);\n    this._removeGhostElement();\n  }\n\n  /** @internal */\n  public handleEvent(event: PointerEvent & KeyboardEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    switch (event.type) {\n      case 'touchstart':\n      // Prevent contextmenu default behavior during resize\n      case 'contextmenu':\n        event.preventDefault();\n        break;\n      case 'keydown':\n        this._handleCancel(event);\n        break;\n      case 'pointerdown':\n        this._handlePointerDown(event);\n        break;\n      case 'pointermove':\n        this._handlePointerMove(event);\n        break;\n      case 'lostpointercapture':\n        this._handlePointerEnd(event);\n        break;\n    }\n  }\n  // #endregion\n\n  // #region Event handlers\n\n  private _handlePointerDown(event: PointerEvent): void {\n    // Non-primary buttons are ignored\n    if (event.button || this._shouldSkip(event)) {\n      return;\n    }\n\n    this._setInitialState(event);\n    this._createGhostElement();\n    const parameters = { event, state: this._stateParameters };\n\n    if (this._options.start?.call(this._host, parameters) === false) {\n      this.dispose();\n      return;\n    }\n\n    this._setResizeState();\n  }\n\n  private _handlePointerMove(event: PointerEvent): void {\n    if (!this._hasPointerCapture) {\n      return;\n    }\n\n    this._updateState(event);\n\n    const parameters = { event, state: this._stateParameters };\n    this._options.resize?.call(this._host, parameters);\n    this._state.current = parameters.state.current;\n    this._updatePosition(this._isDeferred ? this._ghost : this._resizeTarget);\n  }\n\n  private _handlePointerEnd(event: PointerEvent): void {\n    const parameters = { event, state: this._stateParameters };\n\n    this._options.end?.call(this._host, parameters);\n    this._state.current = parameters.state.current;\n\n    parameters.state.commit?.() ?? this._updatePosition(this._resizeTarget);\n    this.dispose();\n  }\n\n  private _handleCancel(event: KeyboardEvent): void {\n    const key = event.key.toLowerCase();\n\n    if (this._hasPointerCapture && key === 'escape') {\n      this._options.cancel?.call(this._host, this._stateParameters);\n    }\n  }\n\n  // #endregion\n\n  // #region Internal API\n\n  private _shouldSkip(event: PointerEvent): boolean {\n    this._setActiveRef(event);\n    return !this._activeRef;\n  }\n\n  private _setActiveRef(event: Event): void {\n    const refs = this._options.ref?.map(({ value }) => value) ?? [this._host];\n\n    this._activeRef =\n      findElementFromEventPath<HTMLElement>(\n        (e) => refs.includes(e as HTMLElement),\n        event\n      ) ?? null;\n  }\n\n  private _setResizeState(enabled = true): void {\n    this._hasPointerCapture = enabled;\n\n    enabled\n      ? this._element.setPointerCapture(this._id)\n      : this._element.releasePointerCapture(this._id);\n\n    this._setResizeCancelListener(enabled);\n\n    // Toggle additional event listeners\n    for (const type of additionalEvents) {\n      enabled\n        ? this._host.addEventListener(type, this)\n        : this._host.removeEventListener(type, this);\n    }\n  }\n\n  private _setResizeCancelListener(enabled = true): void {\n    enabled\n      ? globalThis.addEventListener('keydown', this)\n      : globalThis.removeEventListener('keydown', this);\n  }\n\n  private _setInitialState({ pointerId }: PointerEvent): void {\n    const dimensions = this._resizeTarget.getBoundingClientRect();\n\n    this._id = pointerId;\n    this._state = {\n      initial: dimensions,\n      current: structuredClone(dimensions),\n    };\n  }\n\n  private _updateState({ clientX, clientY }: PointerEvent): void {\n    this._state.current.width = clientX - this._state.initial.x;\n    this._state.current.height = clientY - this._state.initial.y;\n  }\n\n  private _updatePosition(element: HTMLElement | null): void {\n    if (element) {\n      Object.assign(element.style, {\n        width: `${this._state.current.width}px`,\n        height: `${this._state.current.height}px`,\n      });\n    }\n  }\n\n  private _createGhostElement(): void {\n    if (!this._isDeferred) {\n      return;\n    }\n\n    this._ghost =\n      this._options.deferredFactory?.call(this._host) ??\n      createDefaultGhostElement(this._resizeTarget.getBoundingClientRect());\n\n    this._ghost.setAttribute('data-resize-ghost', '');\n    this._layer.append(this._ghost);\n  }\n\n  private _removeGhostElement(): void {\n    this._ghost?.remove();\n    this._ghost = null;\n  }\n\n  // #endregion\n}\n\nexport function addResizeController(\n  host: ReactiveControllerHost & HTMLElement,\n  options?: ResizeControllerConfiguration\n): ResizeController {\n  return new ResizeController(host, options);\n}\n"]}