{"version":3,"file":"carousel-indicator-container.js","sourceRoot":"","sources":["../../../src/components/carousel/carousel-indicator-container.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAE,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,6BAA6B,MAAM,yBAAyB,CAAC;AACpE,OAAO,EAAE,MAAM,EAAE,MAAM,mDAAmD,CAAC;AAC3E,OAAO,EAAE,GAAG,EAAE,MAAM,iCAAiC,CAAC;AACtD,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,uEAAuE,CAAC;AAUzG,MAAqB,sCAAuC,SAAQ,UAAU;IAKrE,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,sCAAsC,CAAC,CAAC;IAC5D,CAAC;IAID;QACE,KAAK,EAAE,CAAC;QAHO,sBAAiB,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAI9D,oBAAoB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAEO,eAAe,CAAC,KAAiB;QACvC,MAAM,MAAM,GAAG,KAAK,CAAC,aAAwB,CAAC;QAE9C,IAAI,MAAM,EAAE,OAAO,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE,CAAC;YAG3D,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;;eAEA,OAAO,CAAC;YACb,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO;SACxC,CAAC;oBACU,IAAI,CAAC,eAAe;;;;KAInC,CAAC;IACJ,CAAC;;AArCsB,8CAAO,GAAG,kCAAkC,AAArC,CAAsC;AAC7C,6CAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,AAAnB,CAAoB;eAF9B,sCAAsC","sourcesContent":["import { html, LitElement } from 'lit';\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport { addKeyboardFocusRing } from '../common/controllers/focus-ring.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport { partMap } from '../common/part-map.js';\nimport IgcCarouselIndicatorComponent from './carousel-indicator.js';\nimport { styles } from './themes/carousel-indicator-container.base.css.js';\nimport { all } from './themes/indicator-container.js';\nimport { styles as shared } from './themes/shared/indicator-container/indicator-container.common.css.js';\n\n/* blazorSuppress */\n/**\n * @element igc-carousel-indicator-container\n *\n * @slot - Default slot for the carousel indicator container.\n *\n * @csspart base - The wrapping container of all carousel indicators.\n */\nexport default class IgcCarouselIndicatorContainerComponent extends LitElement {\n  public static readonly tagName = 'igc-carousel-indicator-container';\n  public static override styles = [styles, shared];\n\n  /* blazorSuppress */\n  public static register(): void {\n    registerComponent(IgcCarouselIndicatorContainerComponent);\n  }\n\n  private readonly _focusRingManager = addKeyboardFocusRing(this);\n\n  constructor() {\n    super();\n    addThemingController(this, all);\n  }\n\n  private _handleFocusOut(event: FocusEvent): void {\n    const target = event.relatedTarget as Element;\n\n    if (target?.matches(IgcCarouselIndicatorComponent.tagName)) {\n      // Stop the event from hitting the _focusRingManager handler redrawing\n      // the keyboard focus styles\n      event.stopPropagation();\n    }\n  }\n\n  protected override render() {\n    return html`\n      <div\n        part=${partMap({\n          base: true,\n          focused: this._focusRingManager.focused,\n        })}\n        @focusout=${this._handleFocusOut}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-carousel-indicator-container': IgcCarouselIndicatorContainerComponent;\n  }\n}\n"]}