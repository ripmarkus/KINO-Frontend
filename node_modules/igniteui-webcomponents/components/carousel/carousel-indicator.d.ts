import { LitElement, type PropertyValues } from 'lit';
/**
 * Used when a custom indicator needs to be passed to the `igc-carousel` component.
 *
 * @element igc-carousel-indicator
 *
 * @slot - Default slot for projected inactive indicator.
 * @slot active - Default slot for projected active indicator.
 *
 * @csspart indicator - The wrapping container of the carousel dot indicator.
 * @csspart inactive - The wrapping container of the inactive dot indicator.
 * @csspart active - The wrapping container of the active dot indicator.
 */
export default class IgcCarouselIndicatorComponent extends LitElement {
    static readonly tagName = "igc-carousel-indicator";
    static styles: import("lit").CSSResult;
    static register(): void;
    private readonly _internals;
    private _carousel?;
    protected get _labelFormat(): string;
    active: boolean;
    index: number;
    /** @internal */
    connectedCallback(): void;
    protected willUpdate(changedProperties: PropertyValues<this>): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-carousel-indicator': IgcCarouselIndicatorComponent;
    }
}
