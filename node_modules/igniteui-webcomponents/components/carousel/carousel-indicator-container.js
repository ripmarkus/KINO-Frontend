import { html, LitElement } from 'lit';
import { addThemingController } from '../../theming/theming-controller.js';
import { addKeyboardFocusRing } from '../common/controllers/focus-ring.js';
import { registerComponent } from '../common/definitions/register.js';
import { partMap } from '../common/part-map.js';
import IgcCarouselIndicatorComponent from './carousel-indicator.js';
import { styles } from './themes/carousel-indicator-container.base.css.js';
import { all } from './themes/indicator-container.js';
import { styles as shared } from './themes/shared/indicator-container/indicator-container.common.css.js';
class IgcCarouselIndicatorContainerComponent extends LitElement {
    static register() {
        registerComponent(IgcCarouselIndicatorContainerComponent);
    }
    constructor() {
        super();
        this._focusRingManager = addKeyboardFocusRing(this);
        addThemingController(this, all);
    }
    _handleFocusOut(event) {
        const target = event.relatedTarget;
        if (target?.matches(IgcCarouselIndicatorComponent.tagName)) {
            event.stopPropagation();
        }
    }
    render() {
        return html `
      <div
        part=${partMap({
            base: true,
            focused: this._focusRingManager.focused,
        })}
        @focusout=${this._handleFocusOut}
      >
        <slot></slot>
      </div>
    `;
    }
}
IgcCarouselIndicatorContainerComponent.tagName = 'igc-carousel-indicator-container';
IgcCarouselIndicatorContainerComponent.styles = [styles, shared];
export default IgcCarouselIndicatorContainerComponent;
//# sourceMappingURL=carousel-indicator-container.js.map