{"version":3,"file":"carousel.js","sourceRoot":"","sources":["../../../src/components/carousel/carousel.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContextProvider } from '@lit/context';\nimport { html, LitElement, nothing } from 'lit';\nimport {\n  property,\n  queryAll,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\n\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { addThemingController } from '../../theming/theming-controller.js';\nimport IgcButtonComponent from '../button/button.js';\nimport { carouselContext } from '../common/context.js';\nimport {\n  addGesturesController,\n  type SwipeEvent,\n} from '../common/controllers/gestures.js';\nimport { addInternalsController } from '../common/controllers/internals.js';\nimport {\n  addKeybindings,\n  arrowLeft,\n  arrowRight,\n  endKey,\n  homeKey,\n} from '../common/controllers/key-bindings.js';\nimport {\n  createMutationController,\n  type MutationControllerParams,\n} from '../common/controllers/mutation-observer.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { partMap } from '../common/part-map.js';\nimport {\n  addSafeEventListener,\n  asNumber,\n  createCounter,\n  findElementFromEventPath,\n  first,\n  formatString,\n  isLTR,\n  last,\n  wrap,\n} from '../common/util.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport type {\n  CarouselIndicatorsOrientation,\n  HorizontalTransitionAnimation,\n} from '../types.js';\nimport IgcCarouselIndicatorComponent from './carousel-indicator.js';\nimport IgcCarouselIndicatorContainerComponent from './carousel-indicator-container.js';\nimport IgcCarouselSlideComponent from './carousel-slide.js';\nimport { styles } from './themes/carousel.base.css.js';\nimport { all } from './themes/container.js';\nimport { styles as shared } from './themes/shared/carousel.common.css.js';\n\nexport interface IgcCarouselComponentEventMap {\n  igcSlideChanged: CustomEvent<number>;\n  igcPlaying: CustomEvent<void>;\n  igcPaused: CustomEvent<void>;\n}\n\n/**\n * The `igc-carousel` presents a set of `igc-carousel-slide`s by sequentially displaying a subset of one or more slides.\n *\n * @element igc-carousel\n *\n * @slot Default slot for the carousel. Any projected `igc-carousel-slide` components should be projected here.\n * @slot previous-button - Renders content inside the previous button.\n * @slot next-button - Renders content inside the next button.\n *\n * @fires igcSlideChanged - Emitted when the current active slide is changed either by user interaction or by the interval callback.\n * @fires igcPlaying - Emitted when the carousel enters playing state by a user interaction.\n * @fires igcPaused - Emitted when the carousel enters paused state by a user interaction.\n *\n * @csspart navigation - The wrapper container of each carousel navigation button.\n * @csspart previous - The wrapper container of the carousel previous navigation button.\n * @csspart next - The wrapper container of the carousel next navigation button.\n * @csspart dot - The carousel dot indicator container.\n * @csspart active - The carousel active dot indicator container.\n * @csspart label - The label container of the carousel indicators.\n * @csspart start - The wrapping container of all carousel indicators when indicators-orientation is set to start.\n */\nexport default class IgcCarouselComponent extends EventEmitterMixin<\n  IgcCarouselComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static styles = [styles, shared];\n  public static readonly tagName = 'igc-carousel';\n\n  /* blazorSuppress */\n  public static register(): void {\n    registerComponent(\n      IgcCarouselComponent,\n      IgcCarouselIndicatorComponent,\n      IgcCarouselIndicatorContainerComponent,\n      IgcCarouselSlideComponent,\n      IgcIconComponent,\n      IgcButtonComponent\n    );\n  }\n\n  private static readonly increment = createCounter();\n  private readonly _carouselId = `igc-carousel-${IgcCarouselComponent.increment()}`;\n\n  private _paused = false;\n  private _lastInterval!: ReturnType<typeof setInterval> | null;\n  private _hasKeyboardInteractionOnIndicators = false;\n  private _hasPointerInteraction = false;\n  private _hasInnerFocus = false;\n\n  private _context = new ContextProvider(this, {\n    context: carouselContext,\n    initialValue: this,\n  });\n\n  private readonly _carouselSlidesContainerRef = createRef<HTMLDivElement>();\n  private readonly _indicatorsContainerRef = createRef<HTMLDivElement>();\n  private readonly _prevButtonRef = createRef<IgcButtonComponent>();\n  private readonly _nextButtonRef = createRef<IgcButtonComponent>();\n\n  private get hasProjectedIndicators(): boolean {\n    return this._projectedIndicators.length > 0;\n  }\n\n  private get showIndicatorsLabel(): boolean {\n    return this.total > this.maximumIndicatorsCount;\n  }\n\n  private get nextIndex(): number {\n    return wrap(0, this.total - 1, this.current + 1);\n  }\n\n  private get prevIndex(): number {\n    return wrap(0, this.total - 1, this.current - 1);\n  }\n\n  @queryAll(IgcCarouselIndicatorComponent.tagName)\n  private _defaultIndicators!: NodeListOf<IgcCarouselIndicatorComponent>;\n\n  @queryAssignedElements({\n    selector: IgcCarouselIndicatorComponent.tagName,\n    slot: 'indicator',\n  })\n  private _projectedIndicators!: Array<IgcCarouselIndicatorComponent>;\n\n  @state()\n  private _activeSlide!: IgcCarouselSlideComponent;\n\n  @state()\n  private _playing = false;\n\n  private _observerCallback({\n    changes: { added, attributes },\n  }: MutationControllerParams<IgcCarouselSlideComponent>) {\n    const activeSlides = this.slides.filter((slide) => slide.active);\n\n    if (activeSlides.length <= 1) {\n      return;\n    }\n    const idx = this.slides.indexOf(\n      added.length ? last(added).node : last(attributes).node\n    );\n\n    for (const [i, slide] of this.slides.entries()) {\n      if (slide.active && i !== idx) {\n        slide.active = false;\n      }\n    }\n\n    this.activateSlide(this.slides[idx]);\n  }\n\n  /**\n   * Whether the carousel should skip rotating to the first slide after it reaches the last.\n   * @attr disable-loop\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'disable-loop' })\n  public disableLoop = false;\n\n  /**\n   * Whether the carousel should ignore use interactions and not pause on them.\n   * @attr disable-pause-on-interaction\n   */\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'disable-pause-on-interaction',\n  })\n  public disablePauseOnInteraction = false;\n\n  /**\n   * Whether the carousel should skip rendering of the default navigation buttons.\n   * @attr hide-navigation\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-navigation' })\n  public hideNavigation = false;\n\n  /**\n   * Whether the carousel should render the indicator controls (dots).\n   * @attr hide-indicators\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-indicators' })\n  public hideIndicators = false;\n\n  /**\n   * Whether the carousel has vertical alignment.\n   * @attr vertical\n   */\n  @property({ type: Boolean, reflect: true })\n  public vertical = false;\n\n  /**\n   * Sets the orientation of the indicator controls (dots).\n   * @attr indicators-orientation\n   */\n  @property({ reflect: false, attribute: 'indicators-orientation' })\n  public indicatorsOrientation: CarouselIndicatorsOrientation = 'end';\n\n  /**\n   * The format used to set the aria-label on the carousel indicators.\n   * Instances of '{0}' will be replaced with the index of the corresponding slide.\n   *\n   * @attr indicators-label-format\n   */\n  @property({ attribute: 'indicators-label-format' })\n  public indicatorsLabelFormat = 'Slide {0}';\n\n  /**\n   * The format used to set the aria-label on the carousel slides and the text displayed\n   * when the number of indicators is greater than tha maximum indicator count.\n   * Instances of '{0}' will be replaced with the index of the corresponding slide.\n   * Instances of '{1}' will be replaced with the total amount of slides.\n   *\n   * @attr slides-label-format\n   */\n  @property({ attribute: 'slides-label-format' })\n  public slidesLabelFormat = '{0} of {1}';\n\n  /**\n   * The duration in milliseconds between changing the active slide.\n   * @attr interval\n   */\n  @property({ type: Number, reflect: false })\n  public interval: number | undefined;\n\n  /**\n   * Controls the maximum indicator controls (dots) that can be shown. Default value is `10`.\n   * @attr maximum-indicators-count\n   */\n  @property({\n    type: Number,\n    reflect: false,\n    attribute: 'maximum-indicators-count',\n  })\n  public maximumIndicatorsCount = 10;\n\n  /**\n   * The animation type.\n   * @attr animation-type\n   */\n  @property({ attribute: 'animation-type' })\n  public animationType: HorizontalTransitionAnimation = 'slide';\n\n  /* blazorSuppress */\n  /**\n   * The slides of the carousel.\n   */\n  @queryAssignedElements({ selector: IgcCarouselSlideComponent.tagName })\n  public slides!: Array<IgcCarouselSlideComponent>;\n\n  /**\n   * The total number of slides.\n   */\n  public get total(): number {\n    return this.slides.length;\n  }\n\n  /**\n   * The index of the current active slide.\n   */\n  public get current(): number {\n    return Math.max(0, this.slides.indexOf(this._activeSlide));\n  }\n\n  /**\n   * Whether the carousel is in playing state.\n   */\n  public get isPlaying(): boolean {\n    return this._playing;\n  }\n\n  /**\n   * Whether the carousel in in paused state.\n   */\n  public get isPaused(): boolean {\n    return this._paused;\n  }\n\n  @watch('animationType')\n  @watch('slidesLabelFormat')\n  @watch('indicatorsLabelFormat')\n  protected contextChanged() {\n    this._context.setValue(this, true);\n  }\n\n  @watch('interval')\n  protected intervalChange() {\n    if (!this.isPlaying) {\n      this._playing = true;\n    }\n\n    this.restartInterval();\n  }\n\n  constructor() {\n    super();\n\n    addInternalsController(this, {\n      initialARIA: {\n        role: 'region',\n        ariaRoleDescription: 'carousel',\n      },\n    });\n\n    addThemingController(this, all);\n\n    addSafeEventListener(this, 'pointerenter', this.handlePointerInteraction);\n    addSafeEventListener(this, 'pointerleave', this.handlePointerInteraction);\n    addSafeEventListener(this, 'focusin', this.handleFocusInteraction);\n    addSafeEventListener(this, 'focusout', this.handleFocusInteraction);\n\n    addGesturesController(this, {\n      ref: this._carouselSlidesContainerRef,\n      touchOnly: true,\n    })\n      .set('swipe-left', this.handleHorizontalSwipe)\n      .set('swipe-right', this.handleHorizontalSwipe)\n      .set('swipe-up', this.handleVerticalSwipe)\n      .set('swipe-down', this.handleVerticalSwipe);\n\n    addKeybindings(this, {\n      ref: this._indicatorsContainerRef,\n      bindingDefaults: { preventDefault: true },\n    })\n      .set(arrowLeft, this.handleArrowLeft)\n      .set(arrowRight, this.handleArrowRight)\n      .set(homeKey, this.handleHomeKey)\n      .set(endKey, this.handleEndKey);\n\n    addKeybindings(this, {\n      ref: this._prevButtonRef,\n      bindingDefaults: { preventDefault: true },\n    }).setActivateHandler(this.handleNavigationInteractionPrevious);\n\n    addKeybindings(this, {\n      ref: this._nextButtonRef,\n      bindingDefaults: { preventDefault: true },\n    }).setActivateHandler(this.handleNavigationInteractionNext);\n\n    createMutationController(this, {\n      callback: this._observerCallback,\n      filter: [IgcCarouselSlideComponent.tagName],\n      config: {\n        attributeFilter: ['active'],\n        childList: true,\n        subtree: true,\n      },\n    });\n  }\n\n  private handleSlotChange(): void {\n    if (this.total) {\n      this.activateSlide(\n        this.slides.findLast((slide) => slide.active) ?? first(this.slides)\n      );\n    }\n  }\n\n  private handleIndicatorSlotChange(): void {\n    this.requestUpdate();\n  }\n\n  private handlePointerInteraction(event: PointerEvent): void {\n    this._hasPointerInteraction = event.type === 'pointerenter';\n\n    if (!this._hasInnerFocus) {\n      this.handlePauseOnInteraction();\n    }\n  }\n\n  private handleFocusInteraction(event: FocusEvent): void {\n    // focusin - element that lost focus\n    // focusout - element that gained focus\n    const node = event.relatedTarget as Node;\n\n    if (this.contains(node)) {\n      return;\n    }\n\n    this._hasInnerFocus = event.type === 'focusin';\n\n    if (!this._hasPointerInteraction) {\n      this.handlePauseOnInteraction();\n    }\n  }\n\n  private handlePauseOnInteraction(): void {\n    if (!this.interval || this.disablePauseOnInteraction) return;\n\n    if (this.isPlaying) {\n      this.pause();\n      this.emitEvent('igcPaused');\n    } else {\n      this.play();\n      this.emitEvent('igcPlaying');\n    }\n  }\n\n  private async handleArrowLeft(): Promise<void> {\n    this._hasKeyboardInteractionOnIndicators = true;\n    this.handleInteraction(isLTR(this) ? this.prev : this.next);\n  }\n\n  private async handleArrowRight(): Promise<void> {\n    this._hasKeyboardInteractionOnIndicators = true;\n    this.handleInteraction(isLTR(this) ? this.next : this.prev);\n  }\n\n  private async handleHomeKey(): Promise<void> {\n    this._hasKeyboardInteractionOnIndicators = true;\n    this.handleInteraction(() =>\n      this.select(isLTR(this) ? first(this.slides) : last(this.slides))\n    );\n  }\n\n  private async handleEndKey(): Promise<void> {\n    this._hasKeyboardInteractionOnIndicators = true;\n    this.handleInteraction(() =>\n      this.select(isLTR(this) ? last(this.slides) : first(this.slides))\n    );\n  }\n\n  private handleVerticalSwipe({ data: { direction } }: SwipeEvent) {\n    if (this.vertical) {\n      this.handleInteraction(direction === 'up' ? this.next : this.prev);\n    }\n  }\n\n  private handleHorizontalSwipe({ data: { direction } }: SwipeEvent) {\n    if (!this.vertical) {\n      const callback = () => {\n        if (isLTR(this)) {\n          return direction === 'left' ? this.next : this.prev;\n        }\n        return direction === 'left' ? this.prev : this.next;\n      };\n\n      this.handleInteraction(callback());\n    }\n  }\n\n  private async handleIndicatorClick(event: PointerEvent): Promise<void> {\n    const indicator = findElementFromEventPath<IgcCarouselIndicatorComponent>(\n      IgcCarouselIndicatorComponent.tagName,\n      event\n    )!;\n\n    const index = this.hasProjectedIndicators\n      ? this._projectedIndicators.indexOf(indicator)\n      : Array.from(this._defaultIndicators).indexOf(indicator);\n\n    this.handleInteraction(() =>\n      this.select(this.slides[index], index > this.current ? 'next' : 'prev')\n    );\n  }\n\n  private handleNavigationInteractionNext() {\n    this.handleInteraction(this.next);\n  }\n\n  private handleNavigationInteractionPrevious() {\n    this.handleInteraction(this.prev);\n  }\n\n  private async handleInteraction(\n    callback: () => Promise<boolean>\n  ): Promise<void> {\n    if (this.interval) {\n      this.resetInterval();\n    }\n\n    if (await callback.call(this)) {\n      this.emitEvent('igcSlideChanged', { detail: this.current });\n    }\n\n    if (this.interval) {\n      this.restartInterval();\n    }\n  }\n\n  private activateSlide(slide: IgcCarouselSlideComponent): void {\n    if (this._activeSlide) {\n      this._activeSlide.active = false;\n    }\n\n    this._activeSlide = slide;\n    this._activeSlide.active = true;\n\n    if (this._hasKeyboardInteractionOnIndicators) {\n      this.hasProjectedIndicators\n        ? this._projectedIndicators[this.current].focus()\n        : this._defaultIndicators[this.current].focus();\n\n      this._hasKeyboardInteractionOnIndicators = false;\n    }\n  }\n\n  private updateProjectedIndicators(): void {\n    for (const [idx, slide] of this.slides.entries()) {\n      const indicator = this._projectedIndicators[idx];\n      indicator.active = slide.active;\n      indicator.index = idx;\n\n      this.setAttribute('aria-controls', slide.id);\n    }\n  }\n\n  private resetInterval(): void {\n    if (this._lastInterval) {\n      clearInterval(this._lastInterval);\n      this._lastInterval = null;\n    }\n  }\n\n  private restartInterval(): void {\n    this.resetInterval();\n\n    if (asNumber(this.interval) > 0) {\n      this._lastInterval = setInterval(() => {\n        if (\n          this.isPlaying &&\n          this.total &&\n          !(this.disableLoop && this.nextIndex === 0)\n        ) {\n          this.select(this.slides[this.nextIndex], 'next');\n          this.emitEvent('igcSlideChanged', { detail: this.current });\n        } else {\n          this.pause();\n        }\n      }, this.interval);\n    }\n  }\n\n  private async animateSlides(\n    nextSlide: IgcCarouselSlideComponent,\n    currentSlide: IgcCarouselSlideComponent,\n    dir: 'next' | 'prev'\n  ): Promise<void> {\n    if (dir === 'next') {\n      // Animate slides in next direction\n      currentSlide.previous = true;\n      currentSlide.toggleAnimation('out');\n      this.activateSlide(nextSlide);\n      await nextSlide.toggleAnimation('in');\n      currentSlide.previous = false;\n    } else {\n      // Animate slides in previous direction\n      currentSlide.previous = true;\n      currentSlide.toggleAnimation('in', 'reverse');\n      this.activateSlide(nextSlide);\n      await nextSlide.toggleAnimation('out', 'reverse');\n      currentSlide.previous = false;\n    }\n  }\n\n  /**\n   * Resumes playing of the carousel slides.\n   */\n  public play(): void {\n    if (!this.isPlaying) {\n      this._paused = false;\n      this._playing = true;\n      this.restartInterval();\n    }\n  }\n\n  /**\n   * Pauses the carousel rotation of slides.\n   */\n  public pause(): void {\n    if (this.isPlaying) {\n      this._playing = false;\n      this._paused = true;\n      this.resetInterval();\n    }\n  }\n\n  /**\n   * Switches to the next slide, runs any animations, and returns if the operation was successful.\n   */\n  public async next(): Promise<boolean> {\n    if (this.disableLoop && this.nextIndex === 0) {\n      this.pause();\n      return false;\n    }\n\n    return await this.select(this.slides[this.nextIndex], 'next');\n  }\n\n  /**\n   * Switches to the previous slide, runs any animations, and returns if the operation was successful.\n   */\n  public async prev(): Promise<boolean> {\n    if (this.disableLoop && this.prevIndex === this.total - 1) {\n      this.pause();\n      return false;\n    }\n\n    return await this.select(this.slides[this.prevIndex], 'prev');\n  }\n\n  /* blazorSuppress */\n  /**\n   * Switches to the passed-in slide, runs any animations, and returns if the operation was successful.\n   */\n  public async select(\n    slide: IgcCarouselSlideComponent,\n    animationDirection?: 'next' | 'prev'\n  ): Promise<boolean>;\n  /**\n   * Switches to slide by index, runs any animations, and returns if the operation was successful.\n   */\n  public async select(\n    index: number,\n    animationDirection?: 'next' | 'prev'\n  ): Promise<boolean>;\n  public async select(\n    slideOrIndex: IgcCarouselSlideComponent | number,\n    animationDirection?: 'next' | 'prev'\n  ): Promise<boolean> {\n    let index: number;\n    let slide: IgcCarouselSlideComponent | undefined;\n\n    if (typeof slideOrIndex === 'number') {\n      index = slideOrIndex;\n      slide = this.slides.at(index);\n    } else {\n      slide = slideOrIndex;\n      index = this.slides.indexOf(slide);\n    }\n\n    if (index === this.current || index === -1 || !slide) {\n      return false;\n    }\n\n    const dir = animationDirection ?? (index > this.current ? 'next' : 'prev');\n\n    await this.animateSlides(slide, this._activeSlide, dir);\n    return true;\n  }\n\n  private navigationTemplate() {\n    return html`\n      <igc-button\n        ${ref(this._prevButtonRef)}\n        type=\"button\"\n        part=\"navigation previous\"\n        aria-label=\"Previous slide\"\n        aria-controls=${this._carouselId}\n        ?disabled=${this.disableLoop && this.current === 0}\n        @click=${this.handleNavigationInteractionPrevious}\n      >\n        <slot name=\"previous-button\">\n          <igc-icon\n            name=\"carousel_prev\"\n            collection=\"default\"\n            aria-hidden=\"true\"\n          ></igc-icon>\n        </slot>\n      </igc-button>\n      <igc-button\n        ${ref(this._nextButtonRef)}\n        type=\"button\"\n        part=\"navigation next\"\n        aria-label=\"Next slide\"\n        aria-controls=${this._carouselId}\n        ?disabled=${this.disableLoop && this.current === this.total - 1}\n        @click=${this.handleNavigationInteractionNext}\n      >\n        <slot name=\"next-button\">\n          <igc-icon\n            name=\"carousel_next\"\n            collection=\"default\"\n            aria-hidden=\"true\"\n          ></igc-icon>\n        </slot>\n      </igc-button>\n    `;\n  }\n\n  protected *renderIndicators() {\n    for (const [i, slide] of this.slides.entries()) {\n      const forward = slide.active ? 'visible' : 'hidden';\n      const backward = slide.active ? 'hidden' : 'visible';\n\n      yield html`\n        <igc-carousel-indicator\n          exportparts=\"indicator, active, inactive\"\n          .active=${slide.active}\n          .index=${i}\n        >\n          <div\n            part=\"dot\"\n            style=${styleMap({ visibility: backward, zIndex: 1 })}\n          ></div>\n          <div\n            part=\"dot active\"\n            slot=\"active\"\n            style=${styleMap({ visibility: forward })}\n          ></div>\n        </igc-carousel-indicator>\n      `;\n    }\n  }\n\n  private indicatorTemplate() {\n    const parts = {\n      indicators: true,\n      start: this.indicatorsOrientation === 'start',\n    };\n\n    return html`\n      <igc-carousel-indicator-container>\n        <div\n          ${ref(this._indicatorsContainerRef)}\n          role=\"tablist\"\n          part=${partMap(parts)}\n        >\n          <slot\n            name=\"indicator\"\n            @slotchange=${this.handleIndicatorSlotChange}\n            @click=${this.handleIndicatorClick}\n          >\n            ${this.hasProjectedIndicators\n              ? this.updateProjectedIndicators()\n              : this.renderIndicators()}\n          </slot>\n        </div>\n      </igc-carousel-indicator-container>\n    `;\n  }\n\n  private labelTemplate() {\n    const parts = {\n      label: true,\n      indicators: true,\n      start: this.indicatorsOrientation === 'start',\n    };\n    const value = formatString(\n      this.slidesLabelFormat,\n      this.current + 1,\n      this.total\n    );\n\n    return html`\n      <div part=${partMap(parts)}>\n        <span>${value}</span>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    return html`\n      <section>\n        ${this.hideNavigation ? nothing : this.navigationTemplate()}\n        ${this.hideIndicators || this.showIndicatorsLabel\n          ? nothing\n          : this.indicatorTemplate()}\n        ${!this.hideIndicators && this.showIndicatorsLabel\n          ? this.labelTemplate()\n          : nothing}\n        <div\n          ${ref(this._carouselSlidesContainerRef)}\n          id=${this._carouselId}\n          aria-live=${this.interval && this._playing ? 'off' : 'polite'}\n        >\n          <slot @slotchange=${this.handleSlotChange}></slot>\n        </div>\n      </section>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-carousel': IgcCarouselComponent;\n  }\n}\n"]}